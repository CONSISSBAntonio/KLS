@{
    ViewData["Title"] = "Listado demandas";
}

<style>
    .form-check-label {
        font-size: 12px !important;
    }

    .select2-selection__rendered {
        float: left;
        font-size: 12px;
        text-transform: uppercase;
    }

    select {
        text-transform: uppercase;
    }

    .select2-results__options {
        font-size: small;
    }

    .modal-lg {
        max-width: 80rem;
    }
</style>

<div class="data-content">
    <div class="p-4">
        <div class="text-left mb-3 d-flex justify-content-between">
            <div class="poppins medium size-24 pl-2">DEMANDAS DISPONIBLES</div>
            <button type="button" class="btn btn-primary" onclick="$('#modalbusqueda').modal('show')" style="width: 20rem; border-color: unset;">BUSCAR</button>
        </div>

        <div class="p-4 shadow bg-white">
            <div class="filtro d-flex justify-content-between" style="height: 4rem;">
                <div class="col-6 d-flex flex-row">
                    <div>
                        <a class="nav-link my-4 mr-3" style="background-color: black; color: white;" id="pills-home-tab" data-toggle="pill" href="javascript:void(0)" role="tab" aria-controls="pills-home" aria-selected="true"><span id="countDemands">DEMANDAS</span></a>
                    </div>
                    <div>
                        <label for="editcliente" class="form-label size-12 font-weight-bold float-left">FILTRAR POR CLIENTE</label>
                        <select class="form-control form-control-sm cliente" style="width: 100%;" id="filtro" name="filtro[]" multiple="multiple" onchange="filter(this)">
                            <option value="0" disabled>SELECCIONA</option>
                        </select>
                    </div>
                    <div>
                        <input type="search" class="form-control my-4 ml-3" style="background-color:#EDECEC; height: 2.3rem;" placeholder="Buscar" onkeyup="DT(false, this.value, true)">
                    </div>

                </div>
                <div class="col-6 my-auto">
                    <div>

                    <a href="javascript:void(0);" class="btn btn-sm btn-secondary float-right d-flex flex-column" onclick="$('#modalcargamasiva').modal('show'), $('#formcsv')[0].reset(), $('.table-csv').addClass('d-none')" style="margin-left: .5rem;text-decoration: unset !important; box-shadow: 0px 0px 10px 0px rgb(0 0 0 / 20%);"><span class="material-icons">upload</span><span style="font-size: 10px; margin-top: .2rem;">importar</span></a>
                    </div>
                    <div>
                    <a href="javascript:void(0);" class="btn btn-sm btn-secondary float-right" onclick="addEdit(0, 0, 0, 0)" style="height: 49px;width: 52px; box-shadow: 0px 0px 10px 0px rgb(0 0 0 / 20%);"><span class="material-icons" style="padding-top: 9px;">add</span></a>

                    </div>
                </div>
            </div>
            <table id="table" class="table table-striped table-bordered display table-hover table-demand text-uppercase"
                   width="100%">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>CLIENTE</th>
                        <th>TIPO DE SERVICIO</th>
                        <th>ORIGEN</th>
                        <th>DESTINO</th>
                        <th>FECHA SALIDA</th>
                        <th>ARRIBO</th>
                        <th>ACCIONES</th>
                    </tr>
                </thead>
                <tbody id="table-info"></tbody>
            </table>
        </div>

    </div>
</div>

<!--MODAL AGREGAR-EDITAR DEMANDA-->
<div class="modal fade" id="modalAddEdit" tabindex="-1" aria-labelledby="modalAddEditlabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalAddEditlabel">EDITAR DEMANDA</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="addEditDemand" onsubmit="event.preventDefault(), addEditDemand(this)">
                    <input type="number" name="id" value="-1" hidden />
                    <div class="row">
                        <div class="col-8">
                            <label for="editcliente" class="form-label size-12 font-weight-bold float-left">CLIENTE</label>
                            <select class="form-control form-control-sm cliente" style="width: 100%;" id="addeditcliente" name="clientid" onchange="getClientParams(this.value)">
                                <option value="0" selected disabled>SELECCIONA</option>
                            </select>
                        </div>
                        @*<div class="col-4">
                                <label for="editreferencia" class="form-label size-12 font-weight-bold float-left">REFERENCIA</label>
                                <input type="text" class="form-control form-control-sm" id="editreferencia" name="folio" value="-" disabled />
                            </div>*@
                    </div>
                    <div class="row mt-3">
                        <div class="col-5">
                            <label for="edittipounidad" class="form-label size-12 font-weight-bold float-left">TIPO DE SERVICIO</label>
                            <select class="form-control form-control-sm tipounidad" style="width: 100%;" id="addedittipounidad" name="unitid">
                                <option value="0" selected disabled>SELECCIONA</option>
                            </select>
                        </div>
                        <div class="col-4">
                            <label for="editfechasalida" class="form-label size-12 font-weight-bold float-left">FECHA DE SALIDA</label>
                            <input type="datetime-local" class="form-control form-control-sm" id="editfechasalida" name="fechadisponibilidad" />
                        </div>
                        <div class="col-3">
                            <label for="editarribo"
                                   class="form-label size-12 font-weight-bold float-left">ARRIBO</label>
                            <input type="datetime" class="form-control form-control-sm" id="editarribo" name="arribo" />
                        </div>
                    </div>
                    <div class="row mt-1">
                        <div class="col-6">
                            <div class="d-flex justify-content-between">
                                <label class="col-form-label col-form-label-sm">ORIGEN</label>
                                <a class="btn btn-link text-primary" onclick="showModal('AGREGAR','Agregar', 'origen')">AGREGAR</a>
                            </div>
                            <div>
                                <select class="form-control form-control-sm text-uppercase" style="width: 100%;" id="editorigen" name="originid" onchange="GetAddress(this.value, 'origen'), getRoute()">
                                    <option value="0" selected disabled>SELECCIONA</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-6 mt-3">
                            <label for="editremitente" class="form-label size-12 font-weight-bold float-left">DIRECCIÓN REMITENTE</label>
                            <input type="text" class="form-control form-control-sm" id="remitentedireccion" disabled />
                        </div>
                    </div>
                    <div class="row mt-1">
                        <div class="col-6">
                            <div class="d-flex justify-content-between">
                                <label class="col-form-label col-form-label-sm">DESTINO</label>
                                <a class="btn btn-link text-primary" onclick="showModal('AGREGAR','Agregar', 'destino')">AGREGAR</a>
                            </div>
                            <div>
                                <select class="form-control form-control-sm text-uppercase" id="editdestino" name="destinationid" style="width: 100%;" onchange="GetAddress(this.value, 'destino'), getRoute()">
                                    <option value="0" selected disabled>SELECCIONA</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-6 mt-3">
                            <label for="editdestinatario" class="form-label size-12 font-weight-bold float-left">DIRECCIÓN DESTINATARIO</label>
                            <input type="text" class="form-control form-control-sm" id="destinatariodireccion" disabled />
                        </div>
                    </div>
                    <div class="row mt-1">
                        <div class="col-12 mt-3">
                            <label for="editruta" class="form-label size-12 font-weight-bold float-left">RUTA</label>
                            <select class="form-control form-control-sm" style="width: 100%;" id="rutaid" name="routeid">
                                <option value="0" selected disabled>SELECCIONA</option>
                            </select>
                        </div>
                    </div>
                    <button type="submit" class="btn btn-primary mt-4 float-left w-25" id="editar">GUARDAR</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!--MODAL BUSCAR DEMANDA-->
<div class="modal fade" id="modalbusqueda" tabindex="-1" aria-labelledby="modalbusquedalabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalbusquedalabel">BUSCAR DEMANDA</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="busqueda" onsubmit="event.preventDefault(), searchdemand(this)">
                    <div class="row">
                        <div class="col-4">
                            <label for="cliente" class="form-label size-12 font-weight-bold float-left">CLIENTE</label>
                            <select class="form-control form-control-sm cliente" id="cliente" name="clientid" style="width: 100%;">
                                <option value="0" selected disabled>SELECCIONA</option>
                            </select>
                        </div>
                        <div class="col-4">
                            <label for="tipounidad" class="form-label size-12 font-weight-bold float-left">TIPO UNIDAD</label>
                            <select class="form-control form-control-sm tipounidad" id="tipounidad" name="unitid" onchange="" style="width: 100%;">
                                <option value="0" selected disabled>SELECCIONA</option>
                            </select>
                        </div>
                        <div class="col-4">
                            <label for="fechasalida" class="form-label size-12 font-weight-bold float-left">FECHA SALIDA</label>
                            <input type="datetime-local" class="form-control" id="fechasalida" name="fechasalida">
                        </div>
                    </div>
                    <div class="row mt-3">
                        <div class="col-4">
                            <label for="rango" class="form-label size-12 font-weight-bold float-left">RANGO (HORAS)</label>
                            <input type="number" class="form-control form-control-sm" id="rango" name="rango" />
                        </div>
                        <div class="col-4">
                            <label for="estadoorigen" class="form-label size-12 font-weight-bold float-left">ESTADO ORIGEN</label>
                            <select class="form-control form-control-sm estado" id="estadoorigen" name="estadoorigenid" onchange="getCities('ciudadorigen', this.value)" style="width: 100%;">
                                <option value="0" selected disabled>SELECCIONA</option>
                            </select>
                        </div>
                        <div class="col-4">
                            <label for="ciudadorigen" class="form-label size-12 font-weight-bold float-left">CIUDAD ORIGEN</label>
                            <select class="form-control form-control-sm ciudad" id="ciudadorigen" name="ciudadorigenid" style="width: 100%;">
                                <option value="0" selected disabled>SELECCIONA</option>
                            </select>
                        </div>
                    </div>
                    <div class="row mt-3">
                        <div class="col-4">
                            <label for="estadodestino" class="form-label size-12 font-weight-bold float-left">ESTADO DESTINO</label>
                            <select class="form-control form-control-sm estado" id="estadodestino" name="estadodestinoid" onchange="getCities('ciudaddestino', this.value)" style="width: 100%;">
                                <option value="0" selected disabled>SELECCIONA</option>
                            </select>
                        </div>
                        <div class="col-4">
                            <label for="ciudaddestino" class="form-label size-12 font-weight-bold float-left">CIUDAD DESTINO</label>
                            <select class="form-control form-control-sm ciudad" id="ciudaddestino" name="ciudaddestinoid" style="width: 100%;">
                                <option value="0" selected disabled>SELECCIONA</option>
                            </select>
                        </div>
                        <div class="col-4">
                            <label for="tamanioempresa" class="form-label size-12 font-weight-bold float-left">TAMAÑO EMPRESA</label>
                            <select class="form-control form-control-sm" id="tamanioempresa" name="tamañoempresa">
                                <option value="0" selected disabled>SELECCIONA</option>
                                <option value="Pequeño">Pequeño</option>
                                <option value="Mediano">Mediano</option>
                                <option value="Grande">Grande</option>
                                <option value="Logística">Logística</option>
                                <option value="Hombre Camión">Hombre Camión</option>
                            </select>
                        </div>
                    </div>
                    <button type="submit" class="btn btn-primary mt-3 float-left" id="search">BUSCAR</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!--MODAL CREAR TRANSPORTISTA-->
<div class="modal fade" id="modaltransportista" tabindex="-1" aria-labelledby="modaltransportistalabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modaltransportistalabel">SELECCIONA TRANSPORTISTA</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="col-2">
                    <label for="rango" class="form-label size-12 font-weight-bold float-left">RADIO TOLERANCIA (KM)</label>
                    <input type="number" class="form-control form-control-sm" id="radio" name="radio" onkeyup="DTCarrier.column(3).search($('#radio').val()).draw()" />
                </div>
                <table class="table table-striped table-bordered display table-hover table-carrier text-uppercase" width="100%">
                    <thead>
                        <tr>
                            <th>TRANSPORTISTA</th>
                            <th>TIPO DE SERVICIO</th>
                            <th>ORIGEN</th>
                            <th>DESTINO</th>
                            <th>FECHA DISPONIBILIDAD</th>
                            <th>EXPIRA EN</th>
                            <th>COSTO</th>
                            <th>ACCIONES</th>
                        </tr>
                    </thead>
                    <tbody class="carrierinfo"></tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!--Modal AGREGAR ORIGEN-DESTINO-->
<div class="modal fade" id="modalDiv" tabindex="-1" role="dialog" data-backdrop="static" data-keyboard="false" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="titulo-modal"></h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body text-left">
                <form id="frmRegister" action="#" method="post">
                    <input type="hidden" name="id" id="idEditar" value="0" />
                    <div class="row">
                        <div class="col-md-3">
                            <div class="form-group">
                                <label class="">Nombre</label>
                                <input type="text" class="form-control" name="Nombre" id="Nombre" required />
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-3">
                            <div class="form-group">
                                <label class="">CP</label>
                                <input type="number" class="form-control" name="Cp" id="Cp" required />
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label class="">Estado</label>
                                <select class="form-control form-control-sm" style="width:100%;" name="Id_Estado" id="Id_Estado" onchange="setCiudad(this.value);">
                                    <option value="0">Selecciona una opción</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label class="">Ciudad</label>
                                <select class="form-control form-control-sm" style="width:100%;" name="Id_Ciudad" id="Id_Ciudad" onchange="setColonias(this.value);">
                                    <option value="0">Selecciona una opción</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label class="">Colonia</label>
                                <select class="form-control form-control-sm" style="width:100%;" name="Id_Colonia" id="Id_Colonia" onchange="setCp(this.value);">
                                    <option value="0">Selecciona una opción</option>
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label class="">Dirección</label>
                                <input type="text" class="form-control" name="Direccion" id="Direccion" required />
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label class="">Hora de atención</label>
                                <input type="time" class="form-control" name="HoraAtencion" id="HoraAtencion" required />
                            </div>
                        </div>
                        <div class="col-md-3">
                            <label class="">Estatus</label>
                            <select class="form-control form-control-sm" name="Estatus" id="Estatus">
                                <option value="1">Activo</option>
                                <option value="2">Inactivo</option>
                            </select>
                        </div>
                    </div>
                    <button type="submit" class="btn btn-dark guardar" style="width:22%;" id="btnAccion">
                        Guardar
                    </button>
                </form>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn" data-dismiss="modal">Cerrar</button>
                @*<button type="button" class="btn btn-primary">Save changes</button>*@
            </div>
        </div>
    </div>
</div>
<!--Modal AGREGAR ORIGEN-DESTINO-->
<!--MODAL CARGA MASIVA-->
<div class="modal fade" id="modalcargamasiva" tabindex="-1" aria-labelledby="modalcargamasivalabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalcargamasivalabel">SELECCIONA UN ARVHIVO EXCEL XLSX PARA REALIZAR LA CARGA MASIVA</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <form id="formcsv" class="mb-3 col-12 d-flex justify-content-center flex-column" onsubmit="event.preventDefault(), upload(this)">
                        <div class="mb-3">
                            <input class="form-control" type="file" id="formFile" name="csv" accept=".xlsx" onchange="importf(this)" required>
                        </div>
                        <div class="d-flex justify-content-center">
                            <button id="sendcsv" type="submit" class="btn btn-dark">ENVIAR</button>
                        </div>
                    </form>
                </div>

                <a asp-controller="Demand" asp-action="DownloadLayout" class="btn btn-outline-info btn-sm d-flex align-items-center mx-auto" style="text-decoration: unset !important; width: 17.5rem;"><i class="material-icons">download</i>DESCARGAR PLANTILLA DE EJEMPLO</a>
            </div>
            <div class="modal-footer d-flex flex-column">
                <p class="text-info size-12 text-uppercase"><span class="text-danger">LOS ORIGENES Y DESTINOS</span> en el Excel XLSX deben llevar el nombre exacto con el que fueron registrados en el sistema en el apartado <span class="text-danger">"CLIENTES->ORIGENES/RUTAS"</span></p>
                <table class="table table-striped table-bordered display table-hover table-csv text-uppercase d-none" width="100%">
                    <thead>
                        <tr>
                            <th>CLIENTE</th>
                            <th>TIPO DE SERVICIO</th>
                            <th>ORIGEN</th>
                            <th>DESTINO</th>
                            <th>FECHA SALIDA</th>
                            <th>ARRIBO</th>
                        </tr>
                    </thead>
                    <tbody id="csv-info"></tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script src="@Url.Content("~/js/sheetjs/xlsx.full.min.js")"></script>
    <script src="@Url.Content("~/js/jquery.unobtrusive-ajax.js")"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.17.1/moment.min.js"></script>
    <script>
        let dataOrigenes = [];
        let dataState = [];
        let dataCity = [];
        let dataColonies = [];
        $(() => {
            $('[type=date]').map((k, e) => $(e).prop('min', new Date().toISOString().split('T')[0]));
            $('[type=datetime-local]').map((k, e) => $(e).prop('min', new Date().toISOString().substring(0, 16)));
            $('#fechasalida').prop('min', '');
            DT();
            initSelects();
            getCatalogos();
            CountDemands();
            dSelect('Id_Estado');
            dSelect('Id_Ciudad');
            dSelect('Id_Colonia');
            $("#frmRegister").submit(function (event) {
                event.preventDefault();
                const type = $(this).attr('rel') == 'destino' ? 'Destinations/setDestino' : 'Origins/setOrigen';
                var jsonData = convertJson($("#frmRegister"));
                jsonData["Id_Cliente"] = $('#addeditcliente').val();
                if (parseInt($("#Id_Ciudad").val()) != 0 && parseInt($("#Id_Estado").val()) != 0 && parseInt($("#Id_Colonia").val()) != 0) {
                    $.post(`/Clients/${type}`, jsonData, function (res) {
                        dToast("success", "Registro guardado exitosamente.", "Registrado");
                        $(".guardar").attr("disabled", false);
                        $('#frmRegister').trigger("reset");
                        $('#addeditcliente').val(jsonData["Id_Cliente"]).trigger('change');
                        Table.draw();
                        CountDemands();
                    }).fail(function (error) {
                        dToast("error", "Error al tratar de guardar el registro", "Error");
                        $(".guardar").attr("disabled", false);
                    });
                } else {
                    dToast("error", "Selecciona una opción", "Error");
                }
            });
        });

        //Catalogos
        function getCatalogos() {
            $.get("/Catalogs/Geography/State/getState", function (res) {
                dataState = res;
                $("#Id_Estado").empty();
                $("#Id_Estado").append(`<option value="0" disabled selected>Selecciona una opción</option>`);
                $.each(dataState, function (item, key) {
                    if (parseInt(key.estatus) == 1) {
                        $("#Id_Estado").append(`<option value="${key.id}">${key.nombre}</option>`);
                    };
                });
            }).fail(function (error) {
                dToast("error", "Error al tratar de obtener los registros, intenta cerrar sesión y volver a iniciar.", "Error");
            });

            $.get("/Catalogs/Geography/City/getCity", function (res) {
                dataCity = res;
            }).fail(function (error) {
                dToast("error", "Error al tratar de obtener los registros, intenta cerrar sesión y volver a iniciar.", "Error");
            });

            $.get("/Catalogs/Geography/Colonies/getColonies", function (res) {
                dataColonies = res;
            }).fail(function (error) {
                dToast("error", "Error al tratar de obtener los registros, intenta cerrar sesión y volver a iniciar.", "Error");
            });
        }

        function searcCP() {
            var codigoP = $("#Cp").val();
            $.each(dataColonies, function (item, key) {
                if (parseInt(key.estatus) == 1 && parseInt(key.cp) == parseInt(codigoP)) {
                    $('#Id_Estado option[value="' + key.id_estado + '"]').attr("selected", true);
                    setCiudad(key.id_estado);
                    $("#Id_Estado").change();
                    $('#Id_Ciudad option[value="' + key.id_ciudad + '"]').attr("selected", true);
                    $("#Id_Ciudad").change();
                    setColonias(key.id_ciudad);
                    $("#Id_Colonia").change();
                };
            });

        }

        function setCp(id) {
            let indice = dataColonies.findIndex(service => service.id == id);
            console.log(indice);
            if (parseInt(id) != 0) {
                if (parseInt(indice) >= 0) {
                    $("#Cp").val(dataColonies[indice].cp);
                } else {
                    $("#Cp").val("");
                    dToast("info", "No se encontro ninguna colonia", "Atención");
                }
            }
        }

        function setColonias(id, idselect = 0) {
            $("#Id_Colonia").empty();
            $("#Id_Colonia").append(`<option value="0">Selecciona una opción</option>`);
            $.get("/Clients/Origins/getColonias/" + id, function (res) {
                dataColonies = res;
                $.each(res, function (item, key) {
                    if (parseInt(key.estatus) == 1) {
                        $("#Id_Colonia").append(`<option value="${key.id}">${key.nombre}</option>`);
                    };
                });
                if (idselect != 0) {
                    $("#Id_Colonia").val(idselect).trigger('change');
                }
            });
        }
        function setCiudad(id) {
            $("#Id_Ciudad").empty();
            $("#Id_Ciudad").append(`<option value="0">Selecciona una opción</option>`);
            $.each(dataCity, function (item, key) {
                if (parseInt(id) == parseInt(key.id_estado)) {
                    $("#Id_Ciudad").append(`<option value="${key.id}">${key.nombre}</option>`);
                };
            });
        }

        const upload = async e => {
            if (!demands) {
                dToast("error", "No fué posible leer los datos", "Error")
                return;
            }

            const params = {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(demands)
            }

            $('#sendcsv').prop('disabled', true).removeClass('btn-dark').addClass('btn-secondary').html('PROCESANDO...');
            let filename = '';
            try {
                const response = await fetch('/Demand/CSV', params);
                const blob = await response.blob();

                filename = response.headers.get('content-disposition').split('filename=')[1].replace('"', '').split(';')[0].replace('"', '');
                const x = window.URL.createObjectURL(blob);
                const anchor = document.createElement('a');
                anchor.href = x;
                anchor.download = filename;
                anchor.click();
                Table.draw();
                CountDemands();
                $('#sendcsv').prop('disabled', false).removeClass('btn-secondary').addClass('btn-dark').html('ENVIAR');
                $('#modalcargamasiva').modal('hide');
                dToast("success", "Carga realizada, revisa el reporte generado para verificar las operaciones realizadas", "Realizado");

            } catch (e) {
                dToast("error", "Ocurrió un error al procesar la solicitud", "Error");
                $('#sendcsv').prop('disabled', false).removeClass('btn-secondary').addClass('btn-dark').html('ENVIAR');
                console.error(e);
            }
        }

        const GetAddress = (id, type) => {
            type === 'origen' ? (
                $.get(`/Clients/Origins/GetOrigin/${id}`, response => {
                    if (!response) {
                        return;
                    }

                    const { direccion } = response;
                    direccion && $('#remitentedireccion').val(direccion);
                })
            ) : (
                $.get(`/Clients/Destinations/GetDestination/${id}`, response => {
                    if (!response) {
                        return;
                    }
                    const { direccion } = response;
                    $('#destinatariodireccion').val(direccion);
                })
            );
        }

        const getClientParams = ClientId => {
            $.get("/Clients/Origins/getOrigen/", { "Id_Cliente": ClientId }, response => {
                $(`#editorigen`).empty().append(`<option value="0" disabled selected>SELECCIONA</option>`);
                response.length || ClientId == 0 ? (response.map(({ id, estatus, nombre }) => {
                    estatus == 1 && $(`#editorigen`).append(`<option value="${id}">${nombre}</option>`);
                })) : (dToast("warning", "El cliente seleccionado no tiene orígenes.", "Atencion!"));

                dSelect(`editorigen`);
            }).fail(error => {
                console.error(error);
                dToast("error", "Error al obtener los origenes del cliente", "Atencion!");
            });

            $.get("/Clients/Destinations/getDestino/", { "Id_Cliente": ClientId }, response => {
                $(`#editdestino`).empty().append(`<option value="0" disabled selected>SELECCIONA</option>`);
                response.length || ClientId == 0 ? (response.map(({ id, estatus, nombre }) => {
                    estatus == 1 && $(`#editdestino`).append(`<option value="${id}">${nombre}</option>`);
                })) : (dToast("warning", "El cliente seleccionado no tiene destinos.", "Atencion!"));

                dSelect(`editdestino`);
            }).fail(error => {
                console.error(error);
                dToast("error", "Error al obtener los destinos del cliente", "Atencion!");
            });
        }

        const getCities = (selector, idestado) => {
            $(`#${selector}`).empty();
            $.get("/Catalogs/Geography/City/getCity", response => {
                $(`#${selector}`).empty();
                $(`#${selector}`).append('<option value="0" disabled selected>SELECCIONA</option>');
                response.map(({ id, id_estado, estatus, nombre }) => {
                    if (id_estado == idestado && estatus === 1) {
                        $(`#${selector}`).append(`<option value="${id}">${nombre}</option>`);
                    }
                });
            }).fail(error => {
                console.error(error);
                dToast("error", "Error al obtener las ciudades", "Atencion!");
            });
            dSelect(selector);
        }

        const initSelects = () => {
            $.get("/Clients/getClients", response => {
                response.map(({ id, nombreCorto, estatus }) => estatus === 1 ? $('.cliente').append(`<option value="${id}">${nombreCorto}</option>`) : null);
                dSelect('cliente');
                dSelect('addeditcliente');
                dSelect('filtro');
            }).fail(error => {
                console.error(error);
                dToast("error", "Error al obtener clientes", "Atencion!");
            });

            $.get("/Catalogs/TypesOfUnits/getUnidades", response => {
                response.map(({ id, nombre, estatus }) => estatus === 1 && $(".tipounidad").append(`<option value="${id}">${nombre}</option>`));
                dSelect('tipounidad');
                dSelect('addedittipounidad');
            }).fail(error => {
                console.error(error);
                dToast("error", "Error al obtener los tipos de unidad", "Atencion!");
            });

            $.get("/Catalogs/Geography/State/getState", response => {
                response.map(({ id, nombre, estatus }) => estatus === 1 && $(".estado").append(`<option value="${id}">${nombre}</option>`));
                dSelect('addestadoo');
                dSelect('addestadod');
                dSelect('estadoorigen');
                dSelect('estadodestino');
            }).fail(error => {
                console.error(error);
                dToast("error", "Error al obtener los estados", "Atencion!");
            });
        };

        const getRoute = () => {
            const origenid = $('#editorigen').val();
            const destinoid = $('#editdestino').val();
            origenid != null && destinoid != null && (
                $("#rutaid").empty().append(`<option value="0" selected disabled>Selecciona una opción</option>`),
                $.post('/Travels/GetRuta', { origenid: origenid, destinoid: destinoid }, response => {
                    response && response.length > 0 ? response.map(({ id, od }) => $('#rutaid').append(`<option value="${id}" selected>${od}</option>`)
                    ) : ($("#rutaid").empty().append(`<option value="0" selected disabled>No se encontraron rutas</option>`));
                })
            )
            dSelect('rutaid');
        }

        const addEditDemand = e => {
            const button = $('#agregar');

            if (!validateForm('#addEditDemand')) {
                dToast("error", "Todos los campos son obligatorios", "¡Atencion!");
                return;
            }

            $(button).prop('disabled', true);

            const data = $(e).serialize();

            $.post(`/Demand/AddEditDemand`, data, response => {
                $(button).prop('disabled', false);
                $('#modalAddEdit').modal('hide');
                dToast("success", "Registro guardado exitosamente.", "Registrado");
                DT();
            });
        }

        const validateForm = form => {
            let isSet = true;
            $(`${form} select, ${form} input`).map((k, { value }) => {
                value = value.trim();
                if (!value || value == 0) {
                    isSet = false;
                    return;
                }
            });

            return isSet;
        };

        const validateSearch = () => {
            let isSet = false;
            $(`#busqueda select, #busqueda input`).map((k, { value }) => {
                value = value.trim();
                if (value != '' && value != 0) {
                    isSet = true;
                    return;
                }
            });

            return isSet;
        };

        const searchdemand = e => {
            if (!validateSearch()) {
                dToast("error", "debes seleccionar al menos un parámetro de búsqueda", "¡Atencion!");
                return;
            }

            const data = Object.fromEntries(new FormData(e));
            DT(true, data);
        }

        const addEdit = (Id, clientid, originid, destinationid) => {
            $('#modalAddEdit').modal('show');
            let title = '';
            $('#addeditcliente').val(clientid).trigger('change');
            $('#rutaid').empty().append(`<option value="0" selected disabled>SELECCIONA UNA OPCIÓN</option>`);
            Id > 0 ? (
                $.get('/Demand/GetDemand/', { Id: Id }, response => {
                    const { folio, routeId } = response;
                    title = `EDITAR DEMANDA - ${folio}`;
                    $('#modalAddEditlabel').text(title);
                    response && Object.entries(response).map(([k, v]) => {
                        v = k.includes('fechadisponibilidad') ? new Date(v).toISOString().substring(0, 16) : v;
                        $(`[name=${k.toLowerCase()}]`).val(v);
                    });
                    setTimeout(() => {
                        $('#editorigen').val(originid).trigger('change');
                        $('#editdestino').val(destinationid).trigger('change');
                        $('#addedittipounidad').trigger('change');
                        $('#rutaid').val(routeId).trigger('change');
                    }, 500);
                })
            ) : (
                title = 'AGREGAR DEMANDA', $('#addEditDemand')[0].reset(), $('#addedittipounidad').val(0).trigger('change')
            );
            $('#modalAddEditlabel').text(title);
        }

        const filter = e => {
            const x = $(e).val();
            DT(false, { FiltroCliente: x });
        }

        function showModal(titulo = "Title", accion, type) {
            $('#frmRegister').trigger("reset").attr('rel', type);
            $(".guardar").html(accion);
            $("#titulo-modal").empty("");
            $("#titulo-modal").html(titulo);
            $("#idEditar").val(idEditar);
            $("#modalDiv").modal("show");
        }

        const selectCarrier = (DemandId, ClientId, UnitId, OriginId, DestinationId) => {
            debugger
            $('#modaltransportista').modal('show');
            $('.carrierinfo').empty();
            $.post('/Demand/GetCarrier', { OriginId: OriginId, UnitId: UnitId }, response => {
                response && response.map(({
                    id,
                    carrierId,
                    unitId,
                    carrier,
                    costo,
                    destination,
                    expira,
                    fechaDisponibilidad,
                    origin,
                    unit
                }) => {
                    $(".carrierinfo").append(`
                        <tr class="text-uppercase">
                        <td>${carrier}</td>
                        <td>${unit}</td>
                        <td>${origin}</td>
                        <td>${destination}</td>
                        <td>${fechaDisponibilidad}</td>
                        <td>${expira} </td>
                        <td>${costo} </td>
                        <td class="text-center">
                            <button type="button" class="btn btn-sm" onclick="AddEdit(${id});" style="background-color: #ffffff00;">
                                <span class="material-icons details">
                                    search
                                </span>
                            </button>
                        </td>
                        </tr>`);
                })
            })
            setTimeout(() => {
                dTable('table-carrier')
                $('#modaltransportista .dataTables_wrapper').children().eq(0).remove();
                $('#modaltransportista .dataTables_wrapper').children().eq(1).remove();
            }, 500);
        }

        const fullTravel = (CarrierId, DemandId) => {
            $.post('/Demand/SetFullTravel', { CarrierId: CarrierId, DemandId: DemandId }, response => {
                console.log(response);
            })
        }

        const DTC = (UnitId, OriginId, DemandId, RouteId) => {
            $('#modaltransportista').modal('show');
            DTCarrier = $('.table-carrier').DataTable({
                destroy: true,
                responsive: true,
                autoWidth: true,
                dom: 'Btp',
                ajax: {
                    type: 'POST',
                    url: '/Demand/GetCarrier',
                    dataSrc: '',
                    data: data => {
                        data.UnitId = UnitId,
                            data.OriginId = OriginId,
                            data.RouteId = RouteId
                    }
                },
                columns: [
                    { data: 'carrier' },
                    { data: 'unit' },
                    { data: 'origin' },
                    { data: 'destination' },
                    { data: 'fechaDisponibilidad' },
                    { data: 'expira' },
                    { data: 'costo' },
                    {
                        render: (data, type, row) => {
                            const { carrierId } = row;
                            return `<a href="/Demand/SetFullTravel?DemandId=${DemandId}&CarrierId=${carrierId}">
                                                            <span class="material-icons details">
                                                                local_shipping
                                                            </span>
                                                        </a>`
                        }
                    }
                ],
                language: {
                    url: '/json/dt-es.json'
                },
                columnDefs: [
                    { className: 'text-center', targets: [6, 7] }
                ],
                initComplete: () => {
                }
            })
        }

        const DT = (customsearch = false, search, isSearch = false) => {
            Table = $('#table').DataTable({
                destroy: true,
                responsive: true,
                autoWidth: true,
                processing: true,
                serverSide: true,
                dom: 'Btp',
                ajax: {
                    type: 'POST',
                    url: '/Demand/DT',
                    data: data => {
                        if (!isSearch) {
                            data.customsearch = customsearch,
                                data.searchmodel = search
                        } else {
                            data.search.value = search ? search : '';
                        }
                    }
                },
                columns: [
                    { data: 'folio' },
                    { data: 'cliente' },
                    { data: 'tipoUnidad' },
                    { data: 'origen' },
                    { data: 'destino' },
                    { data: 'fechaDisponibilidad' },
                    { data: 'arribo' },
                    {
                        render: (data, type, row) => {
                            const { id, clientId, originId, destinationId, unitId, ofertasCount, routeId } = row;
                            return `
                            <a href="javascript:void(0);" onclick="addEdit(${id}, ${clientId}, ${originId}, ${destinationId});">
                                <span class="material-icons">
                                    edit
                                </span>
                            </a>
                            <a href="/Demand/SetTravel/${id}" onclick="create(${id});">
                                <span class="material-icons">
                                    local_shipping
                                </span>
                            </a>
                            <a href="javascript:void(0);" onclick="DTC(${unitId}, ${originId}, ${id}, ${routeId});">
                                <span class="material-icons">
                                    search
                                </span>  ${ofertasCount > 0 ? `<span class="text-danger">${ofertasCount}</span>` : ``}
                            </a>`
                        }
                    }
                ],
                language: {
                    url: '/json/dt-es.json'
                },
                columnDefs: [
                    { className: 'd-flex justify-content-around', targets: [7] }
                ],
                initComplete: () => {
                    $('#modalbusqueda').modal('hide');
                }
            });
        }

        var wb;
        var rABS = false;
        let demands = [];

        //Excel
        function importf(obj) {
            if (!obj.files) {
                notifyLoading(false);
                return;
            }

            var f = obj.files[0];
            var reader = new FileReader();
            reader.onload = function (e) {
                var data = e.target.result;
                if (rABS) {
                    wb = XLSX.read(btoa(fixdata(data)), {
                        type: 'base64'
                    });
                } else {
                    wb = XLSX.read(data, {
                        type: 'binary'
                    });
                }

                const dataXLSX = XLSX.utils.sheet_to_json(wb.Sheets[wb.SheetNames[0]], { raw: false });
                $.each(dataXLSX, function (k, v) {
                    if (!v) {
                        return;
                    }
                    const { cliente, tipounidad, origen, destino, fechasalida, arribo } = v;
                    v['fechasalida'] = moment(fechasalida, 'DD/MM/YYYY hh:mm A').toDate();
                    demands = [...demands, v];
                    const now = moment().toDate();
                    const then = moment(fechasalida, 'DD/MM/YYYY hh:mm A').toDate();
                    const isvalid = then >= now ? true : false;
                    $('#csv-info').append(`
                    <tr ${!isvalid && 'class="bg-warning"'}>
                        <td>${cliente}</td>
                        <td>${tipounidad}</td>
                        <td>${origen}</td>
                        <td>${destino}</td>
                        <td ${!isvalid && 'class="text-danger font-weight-bold"'}>${fechasalida}</td>
                        <td>${arribo}</td>
                    </tr>`);
                });

                $('.table-csv').DataTable({
                    dom: 'Btp',
                    destroy: true,
                    responsive: true,
                    autoWidth: true,
                    language: {
                        url: '/json/dt-es.json'
                    },
                    initComplete: () => {
                        $('.table-csv').removeClass('d-none').parent().addClass('col-12');
                    }
                });
            };

            if (rABS) {
                reader.readAsArrayBuffer(f);
            } else {
                reader.readAsBinaryString(f);
            }
        }
        function fixdata(data) {
            var o = "",
                l = 0,
                w = 10240;
            for (; l < data.byteLength / w; ++l) o += String.fromCharCode.apply(null, new Uint8Array(data.slice(l * w, l * w + w)));

            o += String.fromCharCode.apply(null, new Uint8Array(data.slice(l * w)));
            return o;
        }
        //Excel

        const CountDemands = async () => {
            try {
                const response = await fetch('/Demand/CountDemands');
                const { totalDemands } = await response.json();
                $('#countDemands').html(`DEMANDAS (${totalDemands})`);
            } catch (e) {
                console.error(e);
            }
        }
    </script>
}
@{
    ViewData["Title"] = "Rutas";
}
<style>
    .details {
        background: #207EEC 0% 0% no-repeat padding-box;
        opacity: 1;
        color: white;
    }
</style>

<div class="p-4 body">
    <div class="text-left mb-3">
        <div class="text-uppercase poppins medium size-24 pl-2">Rutas</div>
    </div>

    <div class="p-4 shadow bg-white">
        <table id="table" class="table table-striped table-bordered display table-hover table-rutas" width="100%">
            <thead class="text-uppercase">
                <tr>
                    <th>ID</th>
                    <th>Estado Or</th>
                    <th>Ciudad Or</th>
                    <th>Estado De</th>
                    <th>Ciudad De</th>
                    <th>Kilómetros</th>
                    <th>Seguridad</th>
                    <th>Estatus</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody id="table-info"></tbody>
        </table>
    </div>
</div>


@section Scripts {
    <script>
        var dataCity = [];
        var dataCheckpoint = [];
        var catCiudad = [];
        var catEstado = [];
        var rutaid = 0;

        $(document).ready(function () {
            loadCity();
            loadState();
            setTimeout(() => loadTable(), 500);
        });

        function AddEdit(id, idgenerado, button) {
            const boton = jQuery(button);
            boton.attr('disabled', true);
            $.get(`Route/AddEdit/${id}`, { idgenerado: idgenerado }, function (res) {
                boton.attr('disabled', false);
                $('.body').html(res);
            }).fail(function (error) {
                dToast("error", "Error al obtener paises", "Atencion!");
            });
        }

        //Cargar ciudades
        function loadCity() {
            $.get("/Catalogs/Geography/City/getCity", function (res) {
                res.map(data => {
                    const { estatus } = data;

                    if (estatus === 1) {
                        catCiudad = [...catCiudad, data];
                    }
                });

            }).fail(function (error) {
                dToast("error", "Error al obtener paises", "Atencion!");
            });
        }

        //Cargar estados
        function loadState() {
            $.get("/Catalogs/Geography/State/getState", function (res) {
                catEstado = res;
            }).fail(function (error) {
                dToast("error", "Error al obtener paises", "Atencion!");
            });
        }

        function loadTable() {
            var stable = $('.table-rutas').DataTable();
            stable.destroy();
            $("#table-info").empty();
            $.get("Route/getRoute", function (res) {
                dataCity = res;
                $.each(res, (item, key) => {
                    const IdGenerado = `${String(key.id_ciudadorigen).padStart(4, '0')}${String(key.id_ciudaddestino).padStart(4, '0')}`;
                    let indice_co = catCiudad.findIndex(service => service.id === key.id_ciudadorigen);
                    let indice_cd = catCiudad.findIndex(service => service.id === key.id_ciudaddestino);
                    let indice_eo = catEstado.findIndex(service => service.id === key.id_estadoorigen);
                    let indice_ed = catEstado.findIndex(service => service.id === key.id_estadodestino);
                    const color = nCon(key.seguridad) == 'Alto' ? 'success' : nCon(key.seguridad) == 'Medio' ? 'warning' : 'danger';
                    const status = nCon(key.estatus) == 1 ? 'Activo' : 'Inactivo';
                    $("#table-info").append(`
                                            <tr class="text-uppercase">
                                            <td>${IdGenerado}</td>
                                            <td>${catEstado[indice_eo].nombre}</td>
                                            <td>${catCiudad[indice_co].nombre}</td>
                                            <td>${catEstado[indice_ed].nombre}</td>
                                            <td>${catCiudad[indice_cd].nombre}</td>
                                            <td>${nCon(key.totalkilometros)} km</td>
                                            <td class="font-weight-bold text-${color}">${nCon(key.seguridad)}</td>
                                            <td class="text-center">${status}</td>
                                            <td class="text-center">
                                                <button type="button" class="btn btn-sm" onclick="AddEdit(${nCon(key.id)}, '${IdGenerado}', this);" style="background-color: #ffffff00;">
                                                    <span class="material-icons details">
                                                        search
                                                    </span>
                                                </button>
                                            </td>
                                            </tr>`);
                });
                dTable("table-rutas");
                $('#table_length').html(`
                                <button onclick="AddEdit();" class="btn btn-sm btn-outline-secondary float-right">
                                    <span class="material-icons">
                                        add
                                    </span>
                                </button>`).show();
            }).fail(function (error) {
                dToast("error", "Error al tratar de obtener los registros, intenta cerrar sesión y volver a iniciar.", "Error");
            });
        }
    </script>
} 
@model KLS_WEB.Models.Travels.Tramo

<form id="frmRegister" class="viaje">

    <div class="p-4 shadow bg-white">
        <div class="row">
            <div class="form-group col-3">
                <label asp-for="Travel.IdCliente" class="col-form-label col-form-label-sm">Cliente</label>
                <div>
                    <select asp-for="Travel.IdCliente" asp-items="Model.Clients" id="cliente" class="form-control form-control-sm" style="width: 100%;" onchange="getClientParams(this.value)" required></select>
                </div>
            </div>
            <div class="form-group col-3">
                <label class="col-form-label col-form-label-sm">Fecha de salida</label>
                <div>
                    <input asp-for="Travel.FechaSalida" type="datetime-local" class="form-control form-control-sm" id="fechasalida" name="fechasalida" required>
                </div>
            </div>
            <div class="form-group col-3">
                <label class="col-form-label col-form-label-sm">Fecha de llegada</label>
                <div>
                    <input asp-for="Travel.FechaSalida" type="datetime-local" class="form-control form-control-sm" id="fechallegada" name="fechallegada" required>
                </div>
            </div>
            <div class="form-group col-3">
                <label class="col-form-label col-form-label-sm">Tiempo de anticipación</label>
                <div>
                    <input asp-for="Travel.TiempoAnticipacion" type="text" class="form-control form-control-sm" id="tiempoanticipacion" name="tiempoanticipacion" required>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="form-group col-6">
                <div class="d-flex justify-content-between">
                    <label class="col-form-label col-form-label-sm">Origen</label>
                    <a class="btn btn-link text-primary" onclick="showModal('AGREGAR','Agregar', 'origen')">Agregar</a>
                </div>
                <div>
                    <select class="form-control form-control-sm text-uppercase" id="origen" name="origen" style="width: 100%;" onchange="GetAddress(this.value, 'origen'), getRoute()">
                        <option value="0" selected disabled>SELECCIONA</option>
                    </select>
                </div>
            </div>
            <div class="form-group col-6">
                <label class="col-form-label col-form-label-sm">Dirección Remitente</label>
                <div>
                    <input type="text" class="form-control form-control-sm" id="direccionremitente" name="direccionremitente" required readonly>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="form-group col-6">
                <div class="d-flex justify-content-between">
                    <label class="col-form-label col-form-label-sm">Destino</label>
                    <a class="btn btn-link text-primary" onclick="showModal('AGREGAR','Agregar', 'destino')">Agregar</a>
                </div>
                <div>
                    <select class="form-control form-control-sm" id="destino" name="destino" style="width: 100%;" onchange="GetAddress(this.value, 'destino'), getRoute()">
                        <option value="0" selected disabled>SELECCIONA</option>
                    </select>
                </div>
            </div>
            <div class="form-group col-6">
                <label class="col-form-label col-form-label-sm">Dirección Destinatario</label>
                <div>
                    <input type="text" class="form-control form-control-sm" id="direcciondestinatario" name="direcciondestinatario" required readonly>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="form-group col-6">
                <label class="col-form-label col-form-label-sm">Ruta</label>
                <div>
                    <select asp-for="Travel.IdRuta" class="form-control form-control-sm" id="ruta" name="ruta" style="width: 100%;" onchange="GetRoutePrice(this.value)">
                        <option value="0" selected disabled>SELECCIONA</option>
                    </select>
                </div>
            </div>
            <div class="form-group col-3">
                <label class="col-form-label col-form-label-sm">Tipo de Viaje</label>
                <div>
                    <select class="form-control form-control-sm" id="tipoviaje" name="tipoviaje" onchange="{ SetFolio(this.value); }">
                        <option value="VTNOW">TERRESTRE NACIONAL ONE WAY</option>
                        <option value="VTNTW">TERRESTRE NACIONAL TWO WAY</option>
                        <option value="VTNC">TERRESTRE NACIONAL CIRCUITEABLE</option>
                        <option value="VTI">TERRESTRE INTERNACIONAL</option>
                        <option value="VM">MARÍTIMO</option>
                        <option value="VA">AÉREO</option>
                        <option value="VMM">MULTIMODAL</option>
                    </select>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="form-group col-4">
                <label class="col-form-label col-form-label-sm">Enlace cuenta espejo</label>
                <div>
                    <input asp-for="Travel.EnlaceEspejo" type="text" class="form-control form-control-sm" id="enlaceespejo" name="enlaceespejo" required>
                </div>
            </div>
            <div class="form-group col-4">
                <label class="col-form-label col-form-label-sm">Usuario</label>
                <div>
                    <input asp-for="Travel.UsuarioEspejo" type="text" class="form-control form-control-sm" id="usuarioespejo" name="usuarioespejo" required>
                </div>
            </div>
            <div class="form-group col-4">
                <label class="col-form-label col-form-label-sm">Contraseña</label>
                <div>
                    <input asp-for="Travel.PassEspejo" type="text" class="form-control form-control-sm" id="passespejo" name="passespejo" required>
                </div>
            </div>
        </div>

        <div class="row referencias">
        </div>

        <div class="row mt-3">
            <div class="form-group col-12 d-flex justify-content-between">
                <h6 class="font-weight-bold">Servicios</h6>
                <a class="btn btn-outline-secondary btn-sm" onclick="selectServicios(this);">
                    <i class="material-icons">add</i>
                </a>
            </div>
            <div class="form-group col-12 addServicios">
                <div class="border rounded d-flex justify-content-center align-items-center font-weight-bolder"
                     onclick="selectServicios(this);"
                     style="border: 5px dashed #585858 !important; height: 7rem; opacity: 0.2; cursor: pointer;">
                    <h3>AGREGA SERVICIOS</h3>
                </div>

            </div>
            <div class="col-12 serviciosseleccionados" style="display: none;"></div>
        </div>

    </div>

    <div class="row p-3">
        <div class="col-3 bg-white">
            <p class="font-weight-bolder">Cálculos</p>
            <div class="d-flex justify-content-around">
                <div class="d-flex align-items-end flex-column">
                    <span>Costo</span>
                    <span>Precio Cliente</span>
                </div>
                <div class="d-flex flex-column">
                    <div>
                        $<b id="costos">0.00</b>
                    </div>
                    <div>
                        $<b id="preciocliente">0.00</b>
                    </div>
                </div>
            </div>
            <button class="btn btn-dark col-12 mt-4 guardar">Guardar</button>
        </div>
    </div>
</form>

<script>
    _TramoId = @Model.Travel.Id ;
    _ClientId = @Model.Travel.IdCliente ;
    _RouteId = @Model.Travel.IdRuta ;
    _OriginId = @Model.Travel.IdOrigen ;
    _DestinationId = @Model.Travel.IdDestino ;
    _TipoViaje = ' @Model.Travel.TipoViaje ';
    _ReferenciaUno= ' @Model.Travel.ReferenciaUno ';
    _ReferenciaDos= ' @Model.Travel.ReferenciaDos ';
    _ReferenciaTres= ' @Model.Travel.ReferenciaTres ';

    if (_TramoId > 0) {
        $('#cliente').val(_ClientId).trigger('change');
        setTimeout(() => {
            $('#origen').val(_OriginId).trigger('change');
            $('#destino').val(_DestinationId).trigger('change');
            $('#tipoviaje').val(`${_TipoViaje.trim()}`).trigger('change');
            $('#referencia1').val(_ReferenciaUno);
            $('#referencia2').val(_ReferenciaDos);
            $('#referencia3').val(_ReferenciaTres);
            $('[name=terrestrenacional]').prop('checked', true);
            $('#btnaddservices').click();
        }, 1200);
        setTimeout(() => getServicios(_TramoId), 2000);
        setTimeout(() => GetRoutePrice(_RouteId), 3000);
    }

    console.log('tramoid', _TramoId, 'clienteid', _ClientId, 'orid', _OriginId, 'desid', _DestinationId, 'R1:', _ReferenciaUno, 'R2:', _ReferenciaDos, 'R3:', _ReferenciaTres, 'TipoViaje:', _TipoViaje);

    $(".viaje").submit(event => {
        event.preventDefault();
        if (!existenServicios()) {
            dToast("error", "LOS SERVICIOS SON OBLIGATORIOS", "Error");
            return;
        } else if (!validarSelect()) {
            dToast("error", "LOS PARÁMETROS DE LOS SERVICIOS SON OBLIGATORIOS", "Error");
            return;
        }

        $(".guardar").attr("disabled", true);

        let jsonData = convertJson($(".viaje"));
        const details = {
            id: _TramoId,
            folio: $('#folio').text(),
            estatus: 'REGISTRADO',
            equipo: getEquipos(),
            unidad: getUnidades(),
            servicios: $('#frmServicios').serialize(),
            preciototal: $('#preciocliente').text(),
            costototal: $('#costos').text(),
            maintravelid: MainTravelId,
            clienteid: $('#cliente').val(),
            TipoUnidad: $('#MainTravel_ServiceId').val()
        };

        jsonData = { ...jsonData, ...details };

        const serviceExists = jsonData.servicios != '' && jsonData.unidad != '' && true;
        if (serviceExists) {
            $.post("/Travels/setTravels", jsonData, response => {
                dToast("success", "Registro guardado exitosamente.", "Registrado");
                $(".guardar").attr("disabled", false);
                setTimeout(() => location.reload(), 300);
            }).fail(error => {
                console.error(error);
                dToast("error", "Error al tratar de guardar el registro", "Error");
                $(".guardar").attr("disabled", false);
            });
        } else {
            const { servicios } = jsonData;
            dToast("error", servicios == '' ? "LOS SERVICIOS SON OBLIGATORIOS" : "LA UNIDAD ES OBLIGATORIA", "Error");
            $(".guardar").attr("disabled", false);
        }
    });
    $('[type=datetime-local]').map((k, e) => $(e).prop('min', new Date().toISOString().substring(0, 16)));
</script>
@model KLS_WEB.Models.Travels.DTO.TravelDTO

<style>
    .card, .cshadow {
        box-shadow: 0px 0px 10px 0px rgb(0 0 0 / 20%) !important;
    }

    .btn-dark {
        background-color: black !important;
    }

    .form-label {
        font-size: 12px;
        font-weight: bold;
    }

    select {
        text-transform: uppercase;
        width: 100% !important;
    }
</style>

<div class="p-4">
    <div class="d-flex justify-content-between mb-3">
        <div class="d-flex">
            @*<a href="/@(Model.Type.Contains("demand") ? "Demand" : Model.Type.Contains("offer") ? "Offer" : "Travels")" class="my-auto">
                    <div class="material-icons icon-red">arrow_back</div>
                </a>*@
            <a asp-controller="Travels" asp-action="Index" class="my-auto">
                <div class="material-icons icon-red">arrow_back</div>
            </a>
            <div class="text-uppercase poppins medium size-24 pl-2">Nuevo viaje</div>
        </div>
    </div>
</div>

<div class="row pl-4 w-100">
    <div class="col-6">
        <div class="d-flex justify-content-around">
            <div class="my-auto">
                @*@{int id = Model.Travel.Id; }*@
                <h4 class="text-secondary size-14" id="folio">@Model.Travel.Folio</h4>
            </div>
            <div class="card text-center">
                <div class="card-body pb-0 size-12">
                    <b>$00.00 MXN</b>
                    <p class="text-light-grey">COSTO</p>
                </div>
            </div>
            <div class="card text-center">
                <div class="card-body pb-0 size-12">
                    <b>$00.00 MXN</b>
                    <p class="text-light-grey">VENTA</p>
                </div>
            </div>
            <div class="card text-center">

                <div class="card-body pb-0 size-12">
                    <b>$00.00 MXN</b>
                    <p class="text-light-grey">VACIOS</p>
                </div>
            </div>
        </div>
        <div class="card mt-3" style="height: 14.7rem;">
            <form asp-controller="Travels" asp-action="AddEditTravel" method="post">
                <div class="row">
                    <div class="col-6 pl-4 pt-3">
                        <label asp-for="Travel.Cat_Tipos_UnidadesId" class="form-label">TIPO DE SERVICIO</label>
                        <select asp-for="Travel.Cat_Tipos_UnidadesId" asp-items="Model.Selects.Cat_Tipos_Unidades" class="form-select" style="width: 100%" required></select>
                        <span asp-validation-for="Travel.Cat_Tipos_UnidadesId" class="text-danger"></span>
                    </div>
                    <div class="col-6 pt-3 pr-4">
                        <label asp-for="Travel.Ejecutivo" class="form-label">EJECUTIVO</label>
                        <input asp-for="Travel.Ejecutivo" type="text" class="form-control form-control-sm">
                    </div>
                    <div class="col-6 pl-4 pt-3 pb-4">
                        <label asp-for="Travel.GrupoMonitor" class="form-label">GRUPO MONITOR</label>
                        <input asp-for="Travel.GrupoMonitor" type="text" class="form-control form-control-sm">
                    </div>
                </div>
                <div class="pb-3 pl-2">
                    <button type="submit" id="guardar" class="btn btn-dark" style="width: 12.8rem;">GUARDAR</button>
                </div>
            </form>
        </div>
    </div>

    <div class="col-6">
        <div class="d-flex justify-content-between mb-2" style="height: 3rem;">
            <b class="my-auto size-12">ADMINISTRACIÓN DE TRAMOS</b>
            @if (Model.Travel.Id > 0)
            {
                <button class="btn btn-dark cshadow" onclick="GetSection(this, 0)"><span class="material-icons">add</span></button>
            }
        </div>
        <div style="height: 17rem; overflow-y: scroll;">
            <table class="table table-striped table-bordered display table-hover text-uppercase table-facturas" width="100%">
                <thead>
                    <tr>
                        <th>TRAMO</th>
                        <th>COSTO</th>
                        <th>VENTA</th>
                        <th>CLIENTE</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.Travel.Sections.Any())
                    {
                        foreach (var tramo in Model.Travel.Sections)
                        {
                            <tr>
                                <td><a href="javascript:void(0)" onclick="GetSection(this, @tramo.Id)">@tramo.Folio</a></td>
                                <td>@(tramo.Services.Any() ? tramo.Services.Sum(x => x.Costo).ToString("C") : 0.ToString("C"))</td>
                                <td>@(tramo.Services.Any() ? tramo.Services.Sum(x => x.Precio).ToString("C") : 0.ToString("C"))</td>
                                <td>@tramo.Clients.NombreCorto</td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td class="text-center" colspan="4">AGREGA UN TRAMO PARA COMENZAR</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<div id="sectioncontainer" class="row w-100 pl-4 mt-3">
</div>

<div class="row mt-3 w-100 pl-4">
    <div class="col-12 py-3" style="display: none;" id="addservicescontainer">
        <div class="card col-12 py-3">
            <div class="form-group col-12 d-flex justify-content-between">
                <h6 class="font-weight-bold">Servicios</h6>
                <a class="btn btn-sm cshadow" onclick="$('#modalDiv').modal('show')">
                    <i class="material-icons">add</i>
                </a>
            </div>
            <div class="form-group col-12 addServicios">
                <div class="border rounded d-flex justify-content-center align-items-center font-weight-bolder" onclick="$('#modalDiv').modal('show')" style="border: 5px dashed #585858 !important; height: 7rem; opacity: 0.2; cursor: pointer;">
                    <h3>AGREGA SERVICIOS</h3>
                </div>
            </div>

            <div id="servicescontainer" class="col-12" style="display: none;"></div>
        </div>
    </div>
</div>

<!--Modal global-->
<div class="modal fade" id="modalDiv" tabindex="-1" role="dialog" data-backdrop="static" data-keyboard="false"
     aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-sm" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="titulo-modal">AGREGAR</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body text-left">
                <form id="servicesform" onsubmit="event.preventDefault(), GetServices(this)">
                    <div class="form-check d-flex align-items-center">
                        <input class="form-check-input my-auto" type="checkbox" id="0" name="terrestrenacional">
                        <label class="form-check-label" for="0">Terrestre nacional</label>
                    </div>
                    @*<div class="form-check">
                            <input class="form-check-input" type="checkbox" id="1" name="naviera">
                            <label class="form-check-label" for="1">
                                Naviera
                            </label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="2" name="agenteaduanal">
                            <label class="form-check-label" for="2">
                                Agente aduanal
                            </label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="3"
                                   name="terrestreinternacional">
                            <label class="form-check-label" for="3">
                                Terrestre Internacional
                            </label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="4" name="aerolinea">
                            <label class="form-check-label" for="4">
                                Aerolinea
                            </label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="5" name="coloaders">
                            <label class="form-check-label" for="5">
                                Coloaders
                            </label>
                        </div>*@
                    <br />
                    <button type="submit" class="btn btn-dark" style="width:100%;">
                        Agregar
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

<!--Modal AGREGAR ORIGEN-DESTINO-->
<div class="modal fade" id="modalOD" tabindex="-1" role="dialog" data-backdrop="static" data-keyboard="false" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="titulo-modal"></h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body text-left">
                <form id="frmOD" action="#" method="post">
                    <input type="hidden" name="id" id="idEditar" value="0" />
                    <div class="row">
                        <div class="col-md-3">
                            <div class="form-group">
                                <label class="">Nombre</label>
                                <input type="text" class="form-control" name="Nombre" id="Nombre" required />
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-3">
                            <div class="form-group">
                                <label class="">CP</label>
                                <input type="number" class="form-control" name="Cp" id="Cp" required />
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label class="">Estado</label>
                                <select class="form-control form-control-sm" style="width:100%;" name="Id_Estado" id="Id_Estado" onchange="setCiudad(this.value);">
                                    <option value="0">Selecciona una opción</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label class="">Ciudad</label>
                                <select class="form-control form-control-sm" style="width:100%;" name="Id_Ciudad" id="Id_Ciudad" onchange="setColonias(this.value);">
                                    <option value="0">Selecciona una opción</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label class="">Colonia</label>
                                <select class="form-control form-control-sm" style="width:100%;" name="Id_Colonia" id="Id_Colonia" onchange="setCp(this.value);">
                                    <option value="0">Selecciona una opción</option>
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label class="">Dirección</label>
                                <input type="text" class="form-control" name="Direccion" id="Direccion" required />
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label class="">Hora de atención</label>
                                <input type="time" class="form-control" name="HoraAtencion" id="HoraAtencion" required />
                            </div>
                        </div>
                        <div class="col-md-3">
                            <label class="">Estatus</label>
                            <select class="form-control form-control-sm" name="Estatus" id="Estatus">
                                <option value="1">Activo</option>
                                <option value="2">Inactivo</option>
                            </select>
                        </div>
                    </div>
                    <button type="submit" class="btn btn-dark guardar" style="width:22%;" id="btnAccion">
                        Guardar
                    </button>
                </form>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn" data-dismiss="modal">Cerrar</button>
                @*<button type="button" class="btn btn-primary">Save changes</button>*@
            </div>
        </div>
    </div>
</div>
<!--Modal AGREGAR ORIGEN-DESTINO-->
<!-- modal confirm delete-->
<div class="modal fade" id="popup" tabindex="-1" role="dialog" data-backdrop="static" data-keyboard="false" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-sm" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="titulo-modal"></h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body text-left">
                <p>¿Estas seguro de que deseas eliminar el SERVICIO seleccionado?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn" data-dismiss="modal">Cerrar</button>
                <button id="confirm" type="button" class="btn">Si</button>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script>
        $(() => {
        });

        const GetSection = async (b, SectionId) => {
            b.disabled = true;
            try {
                const response = await fetch(`/Travels/GetSection?SectionId=${SectionId}`);
                const data = await response.text();
                $('#sectioncontainer').html(data);
                $('#addservicescontainer').show();
            } catch (e) {
                console.error(e);
            }
            b.disabled = false;
        }

        const GetCustomerOD = async CustomerId => {
            try {
                const response = await fetch(`/Travels/GetCustomerOD?CustomerId=${CustomerId}`);
                const { origins, destinations } = await response.json();
                let originshtml = `<option value="0" disabled selected>${origins.length > 0 ? 'SELECCIONA' : 'SIN RESULTADOS'}</option>`;
                let destinationshtml = `<option value="0" disabled selected>${destinations.length > 0 ? 'SELECCIONA' : 'SIN RESULTADOS'}</option>`;

                origins && origins.map(({ id, nombre }) => {
                    originshtml += `<option value="${id}">${nombre}</option>`;
                });
                destinations && destinations.map(({ id, nombre }) => {
                    destinationshtml += `<option value="${id}">${nombre}</option>`;
                });
                $('#Section_Cl_Has_OrigenId').html(originshtml);
                $('#Section_Cl_Has_DestinosId').html(destinationshtml);
            } catch (e) {
                console.error(e);
            }
        }

        const GetRoute = async (Id, Type) => {
            const OriginId = $('#Section_Cl_Has_OrigenId').val() ? parseInt($('#Section_Cl_Has_OrigenId').val()) : 0;
            const DestinationId = $('#Section_Cl_Has_DestinosId').val() ? parseInt($('#Section_Cl_Has_DestinosId').val()) : 0;

            try {
                const response = await fetch(`/Travels/GetAddress?Type=${Type}&Id=${Type === 'origin' ? OriginId : DestinationId}`);
                const data = await response.json();
                const selector = Type === 'origin' ? '#Section_Cl_Has_Origen_Direccion' : '#Section_Cl_Has_Destinos_Direccion';
                $(selector).val(data);
            } catch (e) {
                console.error(e);
            }

            if (OriginId != 0 && DestinationId != 0) {
                const params = {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ OriginId: OriginId, DestinationId: DestinationId })
                };

                try {
                    const response = await fetch('/Travels/GetRoute', params);
                    const data = await response.json();
                    data && data.length > 0 ? data.map(({ id, od }) => $('#Section_RutaId').empty().append(`<option value="${id}" selected>${od}</option>`)
                    ) : ($("#Section_RutaId").empty().append(`<option value="0" selected disabled>No se encontraron rutas</option>`));
                } catch (e) {
                    console.error(e);
                }
            }
        }

        const AddEditSection = async (b, f) => {
            if (!validateForm('#sectionform')) {
                dToast("error", "TODOS LOS CAMPOS SON OBLIGATORIOS", "Error");
                return;
            }

            b.disabled = true;
            const params = {
                method: 'POST',
                body: new FormData(f)
            };

            try {
                const response = await fetch('/Travels/AddEditSection', params);
                response.ok && dToast("success", "REGISTRO GUARDADO", "Registrado"), setTimeout(() => location.reload(), 1000);
            } catch (e) {
                console.error(e);
                dToast("error", "OCURRIÓ UN ERROR AL PROCESAR LA SOLICITUD", "Error");
            }
            b.disabled = false;
        }

        const validateForm = (form) => {
            let isSet = true;
            $(`${form} select, ${form} input`).map((k, { value }) => {
                if (!value || value == 0) {
                    isSet = value === 0 && false;
                    isSet = value === 'cerrado' && true;
                    return;
                }
            });
            return isSet;
        }

        const GetServices = async f => {
            const data = new FormData(f);
            let services = [];
            [...data].map(([k, v]) => {
                services = [...services, k];
            });

            const params = {
                method: 'POST',
                headers: {
                    'Content-type': 'application/json; charset=utf-8'
                },
                body: JSON.stringify({ Services: services })
            };

            $('#modalDiv').modal('hide');
            try {
                const resposne = await fetch('/Travels/GetServices', params);
                const data = await resposne.text();
                $('.addServicios').hide();
                $('#servicescontainer').html(data).show();
            } catch (e) {
                console.error(e);
            }
        }

        const getOperadores = async idtransportista => {
            const idselected = $('.equipocontainer').attr('rel');
            idselected != idtransportista && $('.equipocontainer select').parent().remove();
            try {
                const response = await fetch(`/Carriers/Operators/getOperators?Id_Transportista=${idtransportista}`);
                const data = await response.json();
                $('#chofer').empty();
                $('#chofer').append(`<option value="0" selected disabled>SELECCIONA UN CHOFER</option>`)
                data.length > 0 ? data.map(({ id, nombre, estatus }) => estatus === 1 ? $('#chofer').append(`<option value="${id}">${nombre}</option>`) : null) : $('#chofer').append(`<option value="0">SIN OPERADORES ACTIVOS</option>`);
                dSelect('chofer');
            } catch (e) {
                console.error(e);
            }
        }

        const getOperador = async idoperador => {
            try {
                const response = await fetch(`/Carriers/Operators/GetOperator/${idoperador}`);
                const { noLicencia, noTelefono, imss } = await response.json();
                $('#nolicencia').text(noLicencia);
                $('#notelefono').text(noTelefono);
                $('#noimss').text(imss);
            } catch (e) {
                console.error(e);
            }
        }

        const addEquipo = (servicio, element) => {
            const boton = jQuery(element);
            const idtransportista = $('#transportista').val();
            const elementid = $('.equipocontainer').children().length;
            $('.equipocontainer').attr('rel', idtransportista);
            boton.remove();
            const equipo = `<div class="d-flex justify-content-between equipo mt-2">
                    <select id="unidad${elementid}" class="form-control form-control-sm col-4 selectunidad" name="unidad${servicio}" required onchange="{selectEquipo(${idtransportista}, this.value, ${elementid});}">
                    </select>
                    <div class="col-8 d-flex flex-row justify-content-between">
                        <select id="equipo${elementid}" class="form-control form-control-sm col-10 selectequipo" name="equipo${servicio}" required>
                        </select>
                        <i class="material-icons text-danger" style="cursor: pointer;" onClick="{$(this).parent().parent().remove();}">delete</i>
                    </div>
                </div>
                <i id="addEquipo" class="material-icons" style="cursor:pointer;" onclick="addEquipo('${servicio}', this);">add_box</i>`;
            $('.equipocontainer').append(equipo);
            getInventario(idtransportista, elementid);
        }

        const getInventario = async (IdTransportista, elementId) => {
            try {
                const response = await fetch(`/Carriers/Inventory/GetEquipos/${IdTransportista}`);
                const { unidades } = await response.json();
                if (unidades.length > 0) {
                    $(`#unidad${elementId}`).append(`<option value="0">SELECCIONA UNA UNIDAD</option>`);
                    unidades.map(({ tipoUnidad, nombre }) => {
                        $(`#unidad${elementId}`).append(`<option value="${tipoUnidad}">${nombre[0]}</option>`);
                    });
                    selectEquipo(IdTransportista, unidades[0].tipoUnidad, elementId);
                } else {
                    $('.selectunidad').append(`<option value="0">No existen unidades activas</option>`);
                    $('.selectequipo').append(`<option value="0">No existen equipos activos</option>`);
                }
            } catch (e) {
                console.error(e);
            }
        }

        const selectEquipo = async (IdTransportista, IdTipoUnidad, selectid) => {
            try {
                const response = await fetch(`/Carriers/Inventory/GetEquipos/${IdTransportista}`);
                const { dataReport } = await response.json();
                const equipos = dataReport.filter(x => x.tipoUnidad == IdTipoUnidad);
                $(`#equipo${selectid}`).empty();
                $(`#equipo${selectid}`).append(`<option value="0">SELECCIONA UN EQUIPO</option>"`)
                if (equipos.length > 0) {
                    equipos.map(({ id, marca, modelo, placa }) => {
                        $(`#equipo${selectid}`).append(`<option value="${id}">${marca}, ${modelo}. PLACA: ${placa}</option>"`);
                    });
                } else {
                    $(`#equipo${selectid}`).append(`<option value="0">No existen unidades activas</option>"`);
                }
            } catch (e) {
                console.error(e);
            }
        }

        const downloadChofer = element => {
            const idchofer = $('#chofer').val();
            if (idchofer == 0) {
                dToast("error", "NO HAY UN CHOFER SELECCIONADO", "Error");
            } else {
                const a = $("<a>")
                    .attr("href", "/Carriers/Operators/DescargarZip/" + idchofer)
                    .appendTo("body");
                a[0].click();
                a.remove();
            }
        }
    </script>
}

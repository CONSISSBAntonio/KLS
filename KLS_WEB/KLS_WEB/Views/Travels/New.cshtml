@model KLS_WEB.Models.Travels.Travel
@{
    ViewData["Title"] = "Configuracion viajes";
}

<style>
    .form-check-label {
        font-size: 12px !important;
    }

    .select2-selection__rendered {
        float: left;
        font-size: 12px;
        text-transform: uppercase;
    }

    select {
        text-transform: uppercase;
    }
</style>

<div class="data-content p-4 text-left">
    <div class="p-4">
        <div class="d-flex justify-content-between mb-3">
            <div class="d-flex">
                <a href="/@(!string.IsNullOrEmpty(Model.DireccionDestinatario) ? "Travels" : "Demand")">
                    <div class="material-icons icon-red">arrow_back</div>
                </a>
                <div class="text-uppercase poppins medium size-24 pl-2">Nuevo viaje</div>

            </div>
            <div>
                @{string id = Model is null ? "0001" : (++Model.Id).ToString("D4"); }
                <h4 class="text-secondary" id="folio">VT@(string.Concat(DateTime.Now.ToString("yyMM"), id))</h4>
            </div>
        </div>

        <form id="frmRegister" class="viaje">

            <div class="p-4 shadow bg-white">
                <div class="row">
                    <div class="form-group col-6">
                        <label class="col-form-label col-form-label-sm">Cliente</label>
                        <div>
                            <select asp-for="ClienteId" class="form-control form-control-sm" id="cliente" name="cliente" style="width: 100%;" onchange="getClientParams(this.value)">
                                <option value="0" selected disabled>SELECCIONA</option>
                            </select>
                        </div>
                    </div>
                    <div class="form-group col-2">
                        <label class="col-form-label col-form-label-sm">Fecha de salida</label>
                        <div>
                            <input asp-for="FechaSalida" type="datetime-local" class="form-control form-control-sm" id="fechasalida" name="fechasalida" required>
                        </div>
                    </div>
                    <div class="form-group col-2">
                        <label class="col-form-label col-form-label-sm">Fecha de llegada</label>
                        <div>
                            <input type="datetime-local" class="form-control form-control-sm" id="fechallegada" name="fechallegada" required>
                        </div>
                    </div>
                    <div class="form-group col-2">
                        <label class="col-form-label col-form-label-sm">Tiempo de anticipación</label>
                        <div>
                            <input type="text" class="form-control form-control-sm" id="tiempoanticipacion" name="tiempoanticipacion" required>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="form-group col-6">
                        <div class="d-flex justify-content-between">
                            <label class="col-form-label col-form-label-sm">Origen</label>
                            <a class="btn btn-link text-primary" onclick="agregarCiudad(this);">Agregar</a>
                        </div>
                        <div>
                            <select class="form-control form-control-sm text-uppercase" id="origen" name="origen" style="width: 100%;" onchange="GetAddress(this.value, 'origen')">
                                <option value="0" selected disabled>SELECCIONA</option>
                            </select>
                        </div>
                    </div>
                    <div class="form-group col-6">
                        <label class="col-form-label col-form-label-sm">Dirección Remitente</label>
                        <div>
                            <input type="text" class="form-control form-control-sm" id="direccionremitente" name="direccionremitente" required readonly>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="form-group col-6">
                        <div class="d-flex justify-content-between">
                            <label class="col-form-label col-form-label-sm">Destino</label>
                            <a class="btn btn-link text-primary" onclick="agregarCiudad(this);">Agregar</a>
                        </div>
                        <div>
                            <select class="form-control form-control-sm" id="destino" name="destino" style="width: 100%;" onchange="GetAddress(this.value, 'destino')">
                                <option value="0" selected disabled>SELECCIONA</option>
                            </select>
                        </div>
                    </div>
                    <div class="form-group col-6">
                        <label class="col-form-label col-form-label-sm">Dirección Destinatario</label>
                        <div>
                            <input type="text" class="form-control form-control-sm" id="direcciondestinatario" name="direcciondestinatario" required readonly>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="form-group col-6">
                        <label class="col-form-label col-form-label-sm">Ruta</label>
                        <div>
                            <select asp-for="Ruta" class="form-control form-control-sm" id="ruta" name="ruta" style="width: 100%;">
                            </select>
                        </div>
                    </div>
                    <div class="form-group col-3">
                        <label class="col-form-label col-form-label-sm">Tipo de Unidad</label>
                        <div>
                            <select class="form-control form-control-sm" id="tipounidad" name="tipounidad">
                            </select>
                        </div>
                    </div>
                    <div class="form-group col-3">
                        <label class="col-form-label col-form-label-sm">Tipo de Viaje</label>
                        <div>
                            <select class="form-control form-control-sm" id="tipoviaje" name="tipoviaje" onchange="{ SetFolio(this.value); }">
                                <option value="VTNOW">TERRESTRE NACIONAL ONE WAY</option>
                                <option value="VTNTW">TERRESTRE NACIONAL TWO WAY</option>
                                <option value="VTNC">TERRESTRE NACIONAL CIRCUITEABLE</option>
                                <option value="VTI">TERRESTRE INTERNACIONAL</option>
                                <option value="VM">MARÍTIMO</option>
                                <option value="VA">AÉREO</option>
                                <option value="VMM">MULTIMODAL</option>
                            </select>
                        </div>
                    </div>
                </div>

                <div class="row referencias">
                </div>

                <div class="row mt-3">
                    <div class="form-group col-12 d-flex justify-content-between">
                        <h6 class="font-weight-bold">Servicios</h6>
                        <a class="btn btn-outline-secondary btn-sm" onclick="selectServicios(this);">
                            <i class="material-icons">add</i>
                        </a>
                    </div>
                    <div class="form-group col-12 addServicios">
                        <div class="border rounded d-flex justify-content-center align-items-center font-weight-bolder"
                             onclick="selectServicios(this);"
                             style="border: 5px dashed #585858 !important; height: 7rem; opacity: 0.2; cursor: pointer;">
                            <h3>AGREGA SERVICIOS</h3>
                        </div>

                    </div>
                    <div class="col-12 serviciosseleccionados" style="display: none;"></div>
                </div>

            </div>

            <div class="row p-3">
                <div class="col-3 bg-white">
                    <p class="font-weight-bolder">Cálculos</p>
                    <div class="d-flex justify-content-around">
                        <div class="d-flex align-items-end flex-column">
                            <span>Costo</span>
                            <span>Precio Cliente</span>
                        </div>
                        <div class="d-flex flex-column">
                            <div>
                                $<b id="costos">0.00</b>
                            </div>
                            <div>
                                $<b id="preciocliente">0.00</b>
                            </div>
                        </div>
                    </div>
                    <button class="btn btn-dark col-12 mt-4 guardar">Guardar</button>
                </div>
            </div>
        </form>
    </div>
</div>

<!--Modal global-->
<div class="modal fade" id="modalDiv" tabindex="-1" role="dialog" data-backdrop="static" data-keyboard="false"
     aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-sm" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="titulo-modal">AGREGAR</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body text-left">
                <form id="frmServicios" class="viaje" onsubmit="event.preventDefault();">
                    <div class="form-check d-flex align-items-center">
                        <input class="form-check-input my-auto" type="checkbox" id="0" name="terrestrenacional">
                        <label class="form-check-label" for="0">Terrestre nacional</label>
                    </div>
                    @*<div class="form-check">
                            <input class="form-check-input" type="checkbox" id="1" name="naviera">
                            <label class="form-check-label" for="1">
                                Naviera
                            </label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="2" name="agenteaduanal">
                            <label class="form-check-label" for="2">
                                Agente aduanal
                            </label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="3"
                                   name="terrestreinternacional">
                            <label class="form-check-label" for="3">
                                Terrestre Internacional
                            </label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="4" name="aerolinea">
                            <label class="form-check-label" for="4">
                                Aerolinea
                            </label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="5" name="coloaders">
                            <label class="form-check-label" for="5">
                                Coloaders
                            </label>
                        </div>*@
                </form>
                <br />
                <button onclick="closeModal('agregarServicios');" class="btn btn-dark" style="width:100%;">
                    Agregar
                </button>

            </div>
        </div>
    </div>
</div>
<!--Modal global-->
<!--Modal agregar ciudad-->
<div class="modal fade" id="modalAgregarCiudad" tabindex="-1" role="dialog" data-backdrop="static" data-keyboard="false"
     aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title"></h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body text-left">
                <form id="frmAgregarCiudad" onsubmit="event.preventDefault(); closeModal('agregarciudad');">
                    <input type="hidden" name="id" id="idEditar" value="0" />
                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="">País</label><br />
                                <select class="form-control" name="id_pais" id="id_pais" style="width:100%">
                                </select>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <label class="">Estado</label><br />
                            <select class="form-control" name="id_estado" id="id_estado" style="width:100%">
                            </select>
                        </div>
                        <div class="col-md-4">
                            <label class="">ID SEPOMEX</label>
                            <input type="text" class="form-control" name="id_sepomex" id="id_sepomex" required />
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-4">
                            <label class="">Ciudad/Municipio</label>
                            <input type="text" class="form-control" name="nombre" id="nombre" value="" required />
                        </div>
                        <div class="col-md-4">
                            <label class="">Estatus</label><br />
                            <select class="form-control form-control-sm" name="estatus" id="estatus" style="width:100%">
                                <option value="1">Activo</option>
                                <option value="2">Inactivo</option>
                            </select>
                        </div>
                    </div>
                    <br />
                    <button type="submit" class="btn btn-dark guardar" style="width:100%;">
                        Guardar
                    </button>
                </form>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn" data-dismiss="modal">Cerrar</button>
            </div>
        </div>
    </div>
</div>
<!--Modal agregar ciudad-->
<!-- modal confirm delete-->

<div class="modal fade" id="popup" tabindex="-1" role="dialog" data-backdrop="static" data-keyboard="false" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-sm" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="titulo-modal"></h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body text-left">
                <p>¿Estas seguro de que deseas eliminar el SERVICIO seleccionado?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn" data-dismiss="modal">Cerrar</button>
                <button id="confirm" type="button" class="btn">Si</button>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script>
        let dataCity = [];
        let catPais = [];
        let catEstado = [];
        let catCiudad = [];
        const ClientId = @Model.ClienteId ;
        const OriginId = @Model.Origen ;
        const DesitnationId = @Model.Destino ;
        const RouteId = @Model.Ruta ;
        const UnitId = @Model.TipoUnidad ;
        const isDemand = @(string.IsNullOrEmpty(Model.DireccionDestinatario) ? "true" : "false");

    $(() => {
        loadState();
        loadCountry();
        loadUnits();
        initSelects();
        dSelect('tipoviaje');
        $('[type=datetime-local]').map((k, e) => $(e).prop('min', new Date().toISOString().substring(0, 16)));

        $(".viaje").submit(event => {
            event.preventDefault();
            if (!existenServicios()) {
                dToast("error", "LOS SERVICIOS SON OBLIGATORIOS", "Error");
                return;
            } else if (!validarSelect()) {
                dToast("error", "LOS PARÁMETROS DE LOS SERVICIOS SON OBLIGATORIOS", "Error");
                return;
            }

            $(".guardar").attr("disabled", true);

            let jsonData = convertJson($(".viaje"));
            const details = {
                folio: $('#folio').text(),
                estatus: 'REGISTRADO',
                equipo: getEquipos(),
                unidad: getUnidades(),
                servicios: $('#frmServicios').serialize(),
                preciototal: $('#preciocliente').text(),
                costototal: $('#costos').text()
            };

            jsonData = { ...jsonData, ...details };

            const serviceExists = jsonData.servicios != '' && jsonData.unidad != '' && true;

            if (serviceExists) {
                $.post("/Travels/setTravels", jsonData, response =>  {
                    dToast("success", "Registro guardado exitosamente.", "Registrado");
                    $(".guardar").attr("disabled", false);
                    window.location.replace("@Url.Action("", "Travels")");
                }).fail(error => {
                    console.error(error);
                    dToast("error", "Error al tratar de guardar el registro", "Error");
                    $(".guardar").attr("disabled", false);
                });
            } else {
                const { servicios } = jsonData;
                dToast("error", servicios == '' ? "LOS SERVICIOS SON OBLIGATORIOS" : "LA UNIDAD ES OBLIGATORIA", "Error");
                $(".guardar").attr("disabled", false);
            }
        });
    });

        const GetAddress = (id, type) => {
            type === 'origen' ? (
                $.get(`/Clients/Origins/GetOrigin/${id}`, response => {
                    if (!response) {
                        return;
                    }

                    const { direccion } = response;
                    direccion && $('#direccionremitente').val(direccion);
                })
            ) : (
                $.get(`/Clients/Destinations/GetDestination/${id}`, response => {
                    if (!response) {
                        return;
                    }
                    const { direccion } = response;
                    $('#direcciondestinatario').val(direccion);
                })
            );
        }

        const getClientParams = ClientId => {
            $.get("/Clients/Origins/getOrigen/", { "Id_Cliente": ClientId }, response => {
                $(`#origen`).empty();
                $(`#origen`).append(`<option value="0" disabled selected>SELECCIONA</option>`);
                response.length ? (response.map(({ id, estatus, nombre }) => {
                    estatus === 1 && $(`#origen`).append(`<option value="${id}">${nombre}</option>`);
                })) : (dToast("warning", "El cliente seleccionado no tiene orígenes.", "Atencion!"));

                dSelect(`origen`);
            }).fail(error => {
                console.error(error);
                dToast("error", "Error al obtener los origenes del cliente", "Atencion!");
            });

            $.get("/Clients/Destinations/getDestino/", { "Id_Cliente": ClientId }, response => {
                $(`#destino`).empty();
                $(`#destino`).append(`<option value="0" disabled selected>SELECCIONA</option>`);
                response.length ? (response.map(({ id, estatus, nombre }) => {
                    estatus === 1 && $(`#destino`).append(`<option value="${id}">${nombre}</option>`);
                })) : (dToast("warning", "El cliente seleccionado no tiene destinos.", "Atencion!"));

                dSelect(`destino`);
            }).fail(error => {
                console.error(error);
                dToast("error", "Error al obtener los destinos del cliente", "Atencion!");
            });

            $.get(`/Clients/Others/getOtros/`, { Id_Cliente: ClientId }, ({
                referencia1,
                referencia2,
                referencia3,
                treferencia1,
                treferencia2,
                treferencia3
            }) => {
                let referencias = ``;
                referencias += referencia1 ? `<div class="form-group col-4" ><label class="col-form-label col-form-label-sm">${treferencia1.toUpperCase()}</label><div><input type="text" class="form-control form-control-sm" id="referencia1" name="referencia1" required></div></div>` : '';
                referencias += referencia2 ? `<div class="form-group col-4" ><label class="col-form-label col-form-label-sm">${treferencia2.toUpperCase()}</label><div><input type="text" class="form-control form-control-sm" id="referencia2" name="referencia2" required></div></div>` : '';
                referencias += referencia3 ? `<div class="form-group col-4" ><label class="col-form-label col-form-label-sm">${treferencia3.toUpperCase()}</label><div><input type="text" class="form-control form-control-sm" id="referencia3" name="referencia3" required></div></div>` : '';
                $('.referencias').html(referencias);
            });
        }

        const validarSelect = () => {
            let isset = true;
            $('.serviciosseleccionados select').map((k, { value }) => {
                if (value == 0) {
                    isset = false;
                    return;
                }
            });
            return isset;
        }

        const existenServicios = () => {
            let isset = false;
            $('#frmServicios input').map((k, { checked }) => {
                if (checked) {
                    isset = checked;
                    return;
                }
            });
            return isset;
        }

        const SetFolio = tipoviaje => {
            switch (tipoviaje) {
                case 'VTNOW':
                    tipoviaje = tipoviaje.replace('NOW', '');
                    break;
                case 'VTNTW':
                    tipoviaje = tipoviaje.replace('NTW', '');
                    break;
                case 'VTNW':
                    tipoviaje = tipoviaje.replace('NW', '');
                    break;
                case 'VTNC':
                    tipoviaje = tipoviaje.replace('NC', '');
                    break;
                case 'VTI':
                    tipoviaje = tipoviaje.replace('T', '');
                    break;
                case 'VMM':
                    tipoviaje = tipoviaje.replace('MM', 'V');
                    break;
                default:
                    break;
            }

            $('#folio').text($('#folio').text().replace(/[a-zA-Z_]+/g, tipoviaje));
        }

        const initSelects = () => {
            $.get("/Clients/getClients", response => {
                response.map(({ id, nombreCorto, estatus }) => estatus === 1 ? $('#cliente').append(`<option value="${id}">${nombreCorto}</option>`) : null);
                dSelect('cliente');
            });
            $.get("/Route/GetRoutes", response => {
                response.map(({ id, fromTo }) => $('#ruta').append(`<option value="${id}">${fromTo}</option>`));
                dSelect('ruta');
            });

            if (isDemand) {
                setTimeout(() => {
                    $('#cliente').val(ClientId).trigger('change');
                    $('#ruta').val(RouteId).trigger('change');
                    $('#tipounidad').val(RouteId).trigger('change');
                }, 100);

                setTimeout(() => {
                    $('#origen').val(OriginId).trigger('change');
                    $('#destino').val(DesitnationId).trigger('change');
                }, 200);
            }
        };

    const agregarCiudad = element => {
        $('#modalAgregarCiudad').modal('show');
    }

    const closeModal = action => {
        $('#modalDiv').modal('hide');
        if (action == 'agregarciudad') {
            let jsonData = convertJson($("#frmAgregarCiudad"));
            $.post("/Catalogs/Geography/City/setCity", jsonData, response => {
                loadCity();
                $('#modalAgregarCiudad').modal('hide');
                dToast("success", "Registro actualizado exitosamente.", "Registrado");
                $(".guardar").attr("disabled", false);
                $('#frmAgregarCiudad')[0].reset();
            }).fail(error => {
                console.error(error);
                dToast("error", "Error al tratar de guardar el registro", "Error");
                $(".guardar").attr("disabled", false);
            });
        } else {
            const servicios = $('#frmServicios').serialize();
            if (servicios) {
                $.post("@Url.Action("ReturnServicios", "Travels")", { servicios: servicios }, response => {
                    $('.addServicios').hide();
                    $('.serviciosseleccionados').html(response).show('slow', () => { $('.serviciosseleccionados').show(); });
                });
            } else {
                $(`.addServicios`).show('slow', () => { $('.addServicios').show(); });
                $('.serviciosseleccionados').empty().hide();
            }
        }
        }

        //Cargar unidades
        const loadUnits = () => {
            $.get("/Catalogs/TypesOfUnits/getUnidades", response => {
                $("#tipounidad").empty();
                $.each(response, function (item, key) {
                    key.estatus === 1 && $("#tipounidad").append(`<option value="${key.id}">${key.nombre}</option>`);
                });
                dSelect('tipounidad');
            }).fail(error => {
                console.error(error);
                dToast("error", "Error al obtener ciudades", "Atencion!");
            });
        }

    //Cargar ciudades
    const loadCity = () => {
        $.get("/Catalogs/Geography/City/getCity", response => {
            response.map(data => {
                const { id, nombre, estatus } = data;

                if (estatus === 1) {
                    catCiudad = [...catCiudad, data];
                    $("#origen, #destino").append(`<option value="${id}">${nombre}</option>`);
                }
            });
            dSelect('origen');
            dSelect('destino');
        }).fail(error => {
            console.error(error);
            dToast("error", "Error al obtener tipos de unidad", "Atencion!");
        });
    }

    //Cargar paises
    const loadCountry = () => {
        $.get("/Catalogs/Geography/Country/getCountry", response => {
            response.map(data => {
                const { id, pais, estatus } = data;
                if (estatus === 1) {
                    catPais = [...catPais, data];
                    $("#id_pais").append(`<option value="${id}">${pais}</option>`);
                }
            });
            dSelect('id_pais');
        }).fail(error => {
            console.error(error);
            dToast("error", "Error al obtener paises", "Atencion!");
        });
    }

    //Cargar estados
    const loadState = () => {
        $.get("/Catalogs/Geography/State/getState", response => {
            $("#id_estado").empty();
            response.map(data => {
                const { id, nombre, estatus } = data;
                if (estatus === 1) {
                    $("#id_estado").append(`<option value="${id}">${nombre}</option>`);
                }
            });
            dSelect('id_estado');
        }).fail(error => {
            console.error(error);
            dToast("error", "Error al obtener los estados", "Atencion!");
        });
    }

    const selectServicios = element =>  {
        $(element).attr('disabled', true);
        $("#modalDiv").modal("show");
    }

    </script>
}

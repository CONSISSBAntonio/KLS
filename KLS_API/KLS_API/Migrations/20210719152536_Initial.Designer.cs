// <auto-generated />
using System;
using KLS_API.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KLS_API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210719152536_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("KLS_API.Models.AddUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Amaterno")
                        .HasColumnType("varchar(25)");

                    b.Property<string>("Apaterno")
                        .HasColumnType("varchar(25)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nombre")
                        .HasColumnType("varchar(25)");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("KLS_API.Models.Carriers.Tr_Has_Biblioteca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Archivo")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Estatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaEvento")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Id_Transportista")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("varchar(55)");

                    b.Property<string>("Ruta")
                        .HasColumnType("varchar(155)");

                    b.HasKey("Id");

                    b.ToTable("Tr_Has_Biblioteca");
                });

            modelBuilder.Entity("KLS_API.Models.Carriers.Tr_Has_Box", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Custodia")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("D_Opcional")
                        .HasColumnType("varchar(55)");

                    b.Property<bool>("Densidad")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Derramable")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Id_Transportista")
                        .HasColumnType("int");

                    b.Property<string>("M_Opcional")
                        .HasColumnType("varchar(55)");

                    b.Property<bool>("Material")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Notas")
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("OlorPenetrante")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Peligroso")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("TipoPresentacion")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Tp_Opcional")
                        .HasColumnType("varchar(55)");

                    b.Property<string>("V_Opcional")
                        .HasColumnType("varchar(55)");

                    b.Property<string>("Valor")
                        .HasColumnType("varchar(55)");

                    b.HasKey("Id");

                    b.ToTable("Tr_Has_Box");
                });

            modelBuilder.Entity("KLS_API.Models.Carriers.Tr_Has_Certificacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("C_Opcional")
                        .HasColumnType("varchar(55)");

                    b.Property<bool>("Ctpat")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Id_Transportista")
                        .HasColumnType("int");

                    b.Property<string>("O_Opcional")
                        .HasColumnType("varchar(55)");

                    b.Property<bool>("Otro")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("Tr_Has_Certificacion");
                });

            modelBuilder.Entity("KLS_API.Models.Carriers.Tr_Has_Contactos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Correo")
                        .HasColumnType("varchar(55)");

                    b.Property<int>("Estatus")
                        .HasColumnType("int");

                    b.Property<int>("Id_Transportista")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("varchar(55)");

                    b.Property<string>("Telefono")
                        .HasColumnType("varchar(35)");

                    b.Property<string>("TipoContacto")
                        .HasColumnType("varchar(25)");

                    b.HasKey("Id");

                    b.ToTable("Tr_Has_Contactos");
                });

            modelBuilder.Entity("KLS_API.Models.Carriers.Tr_Has_Inventario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Anio")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Capacidad")
                        .HasColumnType("varchar(35)");

                    b.Property<string>("Color")
                        .HasColumnType("varchar(25)");

                    b.Property<int>("Estatus")
                        .HasColumnType("int");

                    b.Property<string>("FotoPoliza")
                        .HasColumnType("varchar(150)");

                    b.Property<string>("FotoUnidad")
                        .HasColumnType("varchar(150)");

                    b.Property<int>("IdTransportista")
                        .HasColumnType("int");

                    b.Property<string>("Marca")
                        .HasColumnType("varchar(55)");

                    b.Property<string>("Modelo")
                        .HasColumnType("varchar(25)");

                    b.Property<string>("NoEconomico")
                        .HasColumnType("varchar(25)");

                    b.Property<string>("NoSerie")
                        .HasColumnType("varchar(25)");

                    b.Property<string>("Placa")
                        .HasColumnType("varchar(25)");

                    b.Property<string>("Ruta")
                        .HasColumnType("varchar(250)");

                    b.Property<int>("TipoUnidad")
                        .HasColumnType("int");

                    b.Property<string>("Volumen")
                        .HasColumnType("varchar(45)");

                    b.HasKey("Id");

                    b.ToTable("Tr_Has_Inventario");
                });

            modelBuilder.Entity("KLS_API.Models.Carriers.Tr_Has_Operadores", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("FotoIne")
                        .HasColumnType("varchar(250)");

                    b.Property<string>("FotoLicencia")
                        .HasColumnType("varchar(250)");

                    b.Property<string>("FotoSeguro")
                        .HasColumnType("varchar(250)");

                    b.Property<int>("Id_Transportista")
                        .HasColumnType("int");

                    b.Property<string>("Imss")
                        .HasColumnType("varchar(25)");

                    b.Property<string>("NoIne")
                        .HasColumnType("varchar(25)");

                    b.Property<string>("NoLicencia")
                        .HasColumnType("varchar(25)");

                    b.Property<string>("NoTelefono")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Ruta")
                        .HasColumnType("varchar(150)");

                    b.Property<int>("estatus")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .HasColumnType("varchar(55)");

                    b.HasKey("Id");

                    b.ToTable("Tr_Has_Operadores");
                });

            modelBuilder.Entity("KLS_API.Models.Carriers.Tr_Has_Ruta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("Costo")
                        .HasColumnType("decimal(14,2)");

                    b.Property<int>("Estatus")
                        .HasColumnType("int");

                    b.Property<int>("Id_Ruta")
                        .HasColumnType("int");

                    b.Property<int>("Id_Transportista")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Tr_Has_Rutas");
                });

            modelBuilder.Entity("KLS_API.Models.Carriers.Transportista", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Banco")
                        .HasColumnType("varchar(90)");

                    b.Property<string>("Comentario")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Contrasena")
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Cuenta")
                        .HasColumnType("varchar(25)");

                    b.Property<string>("DireccionFiscal")
                        .HasColumnType("varchar(250)");

                    b.Property<string>("DireccionOficinas")
                        .HasColumnType("varchar(250)");

                    b.Property<string>("DireccionPatio")
                        .HasColumnType("varchar(250)");

                    b.Property<int>("Estatus")
                        .HasColumnType("int");

                    b.Property<string>("Facebook")
                        .HasColumnType("varchar(250)");

                    b.Property<string>("FechaUltimoViaje")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("GoogleMaps")
                        .HasColumnType("varchar(250)");

                    b.Property<string>("GradoConfiabilidad")
                        .HasColumnType("varchar(15)");

                    b.Property<int>("NivelServicio")
                        .HasColumnType("int");

                    b.Property<string>("NombreComercial")
                        .HasColumnType("varchar(55)");

                    b.Property<string>("OtraRed")
                        .HasColumnType("varchar(250)");

                    b.Property<string>("PaginaWeb")
                        .HasColumnType("varchar(250)");

                    b.Property<string>("RazonSocial")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Rfc")
                        .HasColumnType("varchar(25)");

                    b.Property<string>("Servicio")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Tamanio")
                        .HasColumnType("varchar(22)");

                    b.Property<string>("UsuarioMaster")
                        .HasColumnType("varchar(35)");

                    b.HasKey("id");

                    b.ToTable("Transportista");
                });

            modelBuilder.Entity("KLS_API.Models.Cat_Aerolinea", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("almacen")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("contactos")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("correo")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("departamento")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("estatus")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("notas")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("telefono")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("id");

                    b.ToTable("Cat_Aerolinea");
                });

            modelBuilder.Entity("KLS_API.Models.Cat_Agentes_Aduanales", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("contacto")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("correo")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("departamento")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("direccion")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("estatus")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("notas")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("telefono")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("id");

                    b.ToTable("Cat_Agentes_Aduanales");
                });

            modelBuilder.Entity("KLS_API.Models.Cat_Ciudad", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("estatus")
                        .HasColumnType("int");

                    b.Property<int>("id_estado")
                        .HasColumnType("int");

                    b.Property<int>("id_pais")
                        .HasColumnType("int");

                    b.Property<string>("id_sepomex")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("nombre")
                        .HasColumnType("varchar(35)");

                    b.HasKey("id");

                    b.ToTable("Cat_Ciudad");
                });

            modelBuilder.Entity("KLS_API.Models.Cat_Coloaders", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("contacto")
                        .HasColumnType("varchar(70)");

                    b.Property<string>("correo")
                        .HasColumnType("varchar(55)");

                    b.Property<string>("departamento")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("direccion")
                        .HasColumnType("varchar(80)");

                    b.Property<int>("estatus")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("notas")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("telefono")
                        .HasColumnType("varchar(40)");

                    b.HasKey("id");

                    b.ToTable("Cat_Coloaders");
                });

            modelBuilder.Entity("KLS_API.Models.Cat_Colonia", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("cp")
                        .HasColumnType("int");

                    b.Property<int>("estatus")
                        .HasColumnType("int");

                    b.Property<int>("id_ciudad")
                        .HasColumnType("int");

                    b.Property<int>("id_estado")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .HasColumnType("varchar(50)");

                    b.HasKey("id");

                    b.ToTable("Cat_Colonia");
                });

            modelBuilder.Entity("KLS_API.Models.Cat_Estado", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("estatus")
                        .HasColumnType("int");

                    b.Property<int>("id_pais")
                        .HasColumnType("int");

                    b.Property<string>("id_sepomex")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("nombre")
                        .HasColumnType("varchar(30)");

                    b.HasKey("id");

                    b.ToTable("Cat_Estado");
                });

            modelBuilder.Entity("KLS_API.Models.Cat_Navieras", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("contacto")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("correo")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("departamento")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("direccion")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("estatus")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("notas")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("telefono")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("id");

                    b.ToTable("Cat_Navieras");
                });

            modelBuilder.Entity("KLS_API.Models.Cat_Pais", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("estatus")
                        .HasColumnType("int");

                    b.Property<string>("pais")
                        .HasColumnType("varchar(28)");

                    b.HasKey("id");

                    b.ToTable("Cat_Pais");
                });

            modelBuilder.Entity("KLS_API.Models.Cat_Region", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("estatus")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .HasColumnType("varchar(10)");

                    b.HasKey("id");

                    b.ToTable("Cat_Region");
                });

            modelBuilder.Entity("KLS_API.Models.Cat_Subservicios", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("estatus")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("servicio")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("id");

                    b.ToTable("Cat_Subservicios");
                });

            modelBuilder.Entity("KLS_API.Models.Cat_Terrestres_Internacionales", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("contacto")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("correo")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("departamento")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("direccion")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("estatus")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("notas")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("telefono")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("id");

                    b.ToTable("Cat_Terrestres_Internacionales");
                });

            modelBuilder.Entity("KLS_API.Models.Cat_Tipos_Unidades", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("administrativo")
                        .HasColumnType("Decimal(11,4)");

                    b.Property<int>("ejes")
                        .HasColumnType("int");

                    b.Property<int>("estatus")
                        .HasColumnType("int");

                    b.Property<decimal>("limite_peso")
                        .HasColumnType("Decimal(11,4)");

                    b.Property<string>("limite_volumen")
                        .HasColumnType("Varchar(35)");

                    b.Property<decimal>("litros")
                        .HasColumnType("Decimal(11,4)");

                    b.Property<decimal>("llantas")
                        .HasColumnType("Decimal(11,4)");

                    b.Property<decimal>("mantenimiento")
                        .HasColumnType("Decimal(11,4)");

                    b.Property<string>("nombre")
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("operador")
                        .HasColumnType("Decimal(11,4)");

                    b.Property<decimal>("rendimiento")
                        .HasColumnType("Decimal(11,4)");

                    b.HasKey("id");

                    b.ToTable("Cat_Tipos_Unidades");
                });

            modelBuilder.Entity("KLS_API.Models.Clients.Cl_Has_Biblioteca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Archivo")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Estatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaEvento")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Id_Cliente")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("varchar(55)");

                    b.Property<string>("Ruta")
                        .HasColumnType("varchar(155)");

                    b.HasKey("Id");

                    b.ToTable("Cl_Has_Biblioteca");
                });

            modelBuilder.Entity("KLS_API.Models.Clients.Cl_Has_Box", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Custodia")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("D_Opcional")
                        .HasColumnType("varchar(55)");

                    b.Property<bool>("Densidad")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Derramable")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Id_Cliente")
                        .HasColumnType("int");

                    b.Property<string>("M_Opcional")
                        .HasColumnType("varchar(55)");

                    b.Property<bool>("Material")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Notas")
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("OlorPenetrante")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Peligroso")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("TipoPresentacion")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Tp_Opcional")
                        .HasColumnType("varchar(55)");

                    b.Property<string>("V_Opcional")
                        .HasColumnType("varchar(55)");

                    b.Property<string>("Valor")
                        .HasColumnType("varchar(55)");

                    b.HasKey("Id");

                    b.ToTable("Cl_Has_Box");
                });

            modelBuilder.Entity("KLS_API.Models.Clients.Cl_Has_Certificacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("C_Opcional")
                        .HasColumnType("varchar(55)");

                    b.Property<bool>("Ctpat")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Id_Cliente")
                        .HasColumnType("int");

                    b.Property<string>("O_Opcional")
                        .HasColumnType("varchar(55)");

                    b.Property<bool>("Otro")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("Cl_Has_Certificacion");
                });

            modelBuilder.Entity("KLS_API.Models.Clients.Cl_Has_Checkpoint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Checkpoint")
                        .HasColumnType("varchar(30)");

                    b.Property<int>("Estatus")
                        .HasColumnType("int");

                    b.Property<int>("Id_Ruta")
                        .HasColumnType("int");

                    b.Property<int>("Tiempo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Cl_Has_Checkpoint");
                });

            modelBuilder.Entity("KLS_API.Models.Clients.Cl_Has_Contactos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Correo")
                        .HasColumnType("varchar(55)");

                    b.Property<int>("Estatus")
                        .HasColumnType("int");

                    b.Property<int>("Id_Cliente")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("varchar(55)");

                    b.Property<string>("Telefono")
                        .HasColumnType("varchar(35)");

                    b.Property<string>("TipoContacto")
                        .HasColumnType("varchar(55)");

                    b.HasKey("Id");

                    b.ToTable("Cl_Has_Contactos");
                });

            modelBuilder.Entity("KLS_API.Models.Clients.Cl_Has_Destinos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Cp")
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .HasColumnType("varchar(120)");

                    b.Property<int>("Estatus")
                        .HasColumnType("int");

                    b.Property<int>("Id_Ciudad")
                        .HasColumnType("int");

                    b.Property<int>("Id_Cliente")
                        .HasColumnType("int");

                    b.Property<int>("Id_Colonia")
                        .HasColumnType("int");

                    b.Property<int>("Id_Estado")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("varchar(55)");

                    b.HasKey("Id");

                    b.ToTable("Cl_Has_Destinos");
                });

            modelBuilder.Entity("KLS_API.Models.Clients.Cl_Has_Evidencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Estatus")
                        .HasColumnType("int");

                    b.Property<bool>("Fisica")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Id_Cliente")
                        .HasColumnType("int");

                    b.Property<bool>("Mandatario")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nombre")
                        .HasColumnType("varchar(55)");

                    b.Property<int>("Tiempo_Entrega")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Cl_Has_Evidencia");
                });

            modelBuilder.Entity("KLS_API.Models.Clients.Cl_Has_Origen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Cp")
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .HasColumnType("varchar(120)");

                    b.Property<int>("Estatus")
                        .HasColumnType("int");

                    b.Property<int>("Id_Ciudad")
                        .HasColumnType("int");

                    b.Property<int>("Id_Cliente")
                        .HasColumnType("int");

                    b.Property<int>("Id_Colonia")
                        .HasColumnType("int");

                    b.Property<int>("Id_Estado")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("varchar(55)");

                    b.HasKey("Id");

                    b.ToTable("Cl_Has_Origen");
                });

            modelBuilder.Entity("KLS_API.Models.Clients.Cl_Has_Otros", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Id_Cliente")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Mandatario1")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Mandatario2")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Mandatario3")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Referencia1")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Referencia2")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Referencia3")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Treferencia1")
                        .HasColumnType("varchar(55)");

                    b.Property<string>("Treferencia2")
                        .HasColumnType("varchar(55)");

                    b.Property<string>("Treferencia3")
                        .HasColumnType("varchar(55)");

                    b.HasKey("Id");

                    b.ToTable("Cl_Has_Otros");
                });

            modelBuilder.Entity("KLS_API.Models.Clients.Cl_Has_Requisitos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("ContarAlarma")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("ContarAlarma_")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("EquipoCovid")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("EquipoCovid_")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("EquipoSeguridad")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("EquipoSeguridad_")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Id_Cliente")
                        .HasColumnType("int");

                    b.Property<bool>("Instruccion")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IntruccionDescarga")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("LlevarCertificado")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("LlevarCertificado_")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("LlevarGatas")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("LlevarGatas_")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("LlevarIne")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("LlevarIne_")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("LlevarLicencia")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("LlevarLicencia_")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("LlevarPoliza")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("LlevarPoliza_")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("LlevarSua")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("LlevarSua_")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("LlevarTarjeta")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("LlevarTarjeta_")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("LlevarTodos_")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("PresentarseMin_")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("UnidadCondiciones")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("Cl_Has_Requisitos");
                });

            modelBuilder.Entity("KLS_API.Models.Clients.Cl_Has_Routes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Estatus")
                        .HasColumnType("int");

                    b.Property<int>("Id_Cliente")
                        .HasColumnType("int");

                    b.Property<int>("Id_Cliente_Kls")
                        .HasColumnType("int");

                    b.Property<int>("Id_Ruta")
                        .HasColumnType("int");

                    b.Property<bool>("Monitoreable")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("Cl_Has_Routes");
                });

            modelBuilder.Entity("KLS_API.Models.Clients.Clientes", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Banco")
                        .HasColumnType("varchar(55)");

                    b.Property<string>("Comentario")
                        .HasColumnType("varchar(55)");

                    b.Property<string>("Cuenta")
                        .HasColumnType("varchar(55)");

                    b.Property<string>("DireccionFiscal")
                        .HasColumnType("varchar(55)");

                    b.Property<string>("Ejecutivo")
                        .HasColumnType("varchar(55)");

                    b.Property<int>("Estatus")
                        .HasColumnType("int");

                    b.Property<string>("Facebook")
                        .HasColumnType("varchar(55)");

                    b.Property<string>("Industria")
                        .HasColumnType("varchar(55)");

                    b.Property<string>("InegiDenue")
                        .HasColumnType("varchar(55)");

                    b.Property<string>("NombreComercial")
                        .HasColumnType("varchar(55)");

                    b.Property<string>("NombreCorto")
                        .HasColumnType("varchar(55)");

                    b.Property<string>("OtraRed")
                        .HasColumnType("varchar(55)");

                    b.Property<string>("PaginaWeb")
                        .HasColumnType("varchar(55)");

                    b.Property<string>("RazonSocial")
                        .HasColumnType("varchar(55)");

                    b.Property<string>("Rfc")
                        .HasColumnType("varchar(55)");

                    b.Property<string>("Sector")
                        .HasColumnType("varchar(55)");

                    b.Property<string>("Tamanio")
                        .HasColumnType("varchar(55)");

                    b.HasKey("id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("KLS_API.Models.Region_Has_Estado", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Cat_RegionId")
                        .HasColumnType("int");

                    b.Property<int>("id_estado")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Cat_RegionId");

                    b.ToTable("Region_Has_Estado");
                });

            modelBuilder.Entity("KLS_API.Models.Ruta", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("actualizadopor")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("demanda")
                        .HasColumnType("varchar(20)");

                    b.Property<int>("eficiencia")
                        .HasColumnType("int");

                    b.Property<int>("estatus")
                        .HasColumnType("int");

                    b.Property<int>("frecvalidacion")
                        .HasColumnType("int");

                    b.Property<int>("id_ciudaddestino")
                        .HasColumnType("int");

                    b.Property<int>("id_ciudadorigen")
                        .HasColumnType("int");

                    b.Property<int>("id_estadodestino")
                        .HasColumnType("int");

                    b.Property<int>("id_estadoorigen")
                        .HasColumnType("int");

                    b.Property<string>("observaciones")
                        .HasColumnType("text");

                    b.Property<string>("restriccioncirc")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("seguridad")
                        .HasColumnType("varchar(20)");

                    b.Property<int>("totalkilometros")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ultimocambio")
                        .HasColumnType("DateTime");

                    b.HasKey("id");

                    b.ToTable("Ruta");
                });

            modelBuilder.Entity("KLS_API.Models.Ruta_Has_Checkpoint", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("RutaId")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .HasColumnType("varchar(50)");

                    b.Property<int>("tiempo")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Ruta_Has_Checkpoint");
                });

            modelBuilder.Entity("KLS_API.Models.Travels.Facturacion", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("TravelId")
                        .HasColumnType("int");

                    b.Property<DateTime>("fechacarga")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("fullpath")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("nombre")
                        .HasColumnType("VARCHAR(300)");

                    b.Property<string>("usuario")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("id");

                    b.HasIndex("TravelId");

                    b.ToTable("Facturacion");
                });

            modelBuilder.Entity("KLS_API.Models.Travels.Mercancia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("Alto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Ancho")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Largo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Peso")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PesoVolumetrico")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TravelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TravelId");

                    b.ToTable("Mercancias");
                });

            modelBuilder.Entity("KLS_API.Models.Travels.Services", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Buque")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<decimal>("Costo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("IdAerolinea")
                        .HasColumnType("int");

                    b.Property<int>("IdAgenteAduanal")
                        .HasColumnType("int");

                    b.Property<int>("IdChofer")
                        .HasColumnType("int");

                    b.Property<int>("IdCoLoader")
                        .HasColumnType("int");

                    b.Property<int>("IdContactoA")
                        .HasColumnType("int");

                    b.Property<int>("IdContactoAA")
                        .HasColumnType("int");

                    b.Property<int>("IdContactoCL")
                        .HasColumnType("int");

                    b.Property<int>("IdNaviera")
                        .HasColumnType("int");

                    b.Property<int>("IdTransportista")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TravelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TravelId");

                    b.ToTable("Servicios");
                });

            modelBuilder.Entity("KLS_API.Models.Travels.Travel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Consignee")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<decimal>("CostoTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DireccionDestinatario")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("DireccionRemitente")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Estatus")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("FechaLlegada")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaSalida")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Folio")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("HBL")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int>("IdDestino")
                        .HasColumnType("int");

                    b.Property<int>("IdOrigen")
                        .HasColumnType("int");

                    b.Property<int>("IdRuta")
                        .HasColumnType("int");

                    b.Property<int>("IdUnidad")
                        .HasColumnType("int");

                    b.Property<string>("Intercom")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("OrdenCompra")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<decimal>("PrecioClienteTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ReferenciaDos")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ReferenciaTres")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Shipper")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("TipoViaje")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Viajes");
                });

            modelBuilder.Entity("KLS_API.Models.Travels.Unidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("IdEquipo")
                        .HasColumnType("int");

                    b.Property<int>("IdUnidad")
                        .HasColumnType("int");

                    b.Property<int>("ServicesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ServicesId");

                    b.ToTable("Unidades");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("RoleId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("Value")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("KLS_API.Models.Region_Has_Estado", b =>
                {
                    b.HasOne("KLS_API.Models.Cat_Region", null)
                        .WithMany("Region_Has_Estados")
                        .HasForeignKey("Cat_RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KLS_API.Models.Travels.Facturacion", b =>
                {
                    b.HasOne("KLS_API.Models.Travels.Travel", "Travel")
                        .WithMany("Facturas")
                        .HasForeignKey("TravelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KLS_API.Models.Travels.Mercancia", b =>
                {
                    b.HasOne("KLS_API.Models.Travels.Travel", "Travel")
                        .WithMany()
                        .HasForeignKey("TravelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KLS_API.Models.Travels.Services", b =>
                {
                    b.HasOne("KLS_API.Models.Travels.Travel", "Travel")
                        .WithMany("Servicios")
                        .HasForeignKey("TravelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KLS_API.Models.Travels.Unidad", b =>
                {
                    b.HasOne("KLS_API.Models.Travels.Services", "Services")
                        .WithMany("Unidades")
                        .HasForeignKey("ServicesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("KLS_API.Models.AddUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("KLS_API.Models.AddUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KLS_API.Models.AddUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("KLS_API.Models.AddUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
